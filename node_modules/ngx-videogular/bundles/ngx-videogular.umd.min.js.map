{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-videogular/lib/core/states/vg-states.ts","ng://ngx-videogular/lib/core/services/vg-api.ts","ng://ngx-videogular/lib/buffering/vg-buffering.ts","ng://ngx-videogular/lib/buffering/vg-buffering.module.ts","ng://ngx-videogular/lib/core/services/vg-controls-hidden.ts","ng://ngx-videogular/lib/controls/vg-controls.ts","ng://ngx-videogular/lib/core/services/vg-utils.ts","ng://ngx-videogular/lib/core/services/vg-fullscreen-api.ts","ng://ngx-videogular/lib/controls/vg-fullscreen/vg-fullscreen.ts","ng://ngx-videogular/lib/controls/vg-mute/vg-mute.ts","ng://ngx-videogular/lib/controls/vg-volume/vg-volume.ts","ng://ngx-videogular/lib/controls/vg-play-pause/vg-play-pause.ts","ng://ngx-videogular/lib/controls/vg-playback-button/vg-playback-button.ts","ng://ngx-videogular/lib/controls/vg-scrub-bar/vg-scrub-bar.ts","ng://ngx-videogular/lib/controls/vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time.ts","ng://ngx-videogular/lib/controls/vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points.ts","ng://ngx-videogular/lib/controls/vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time.ts","ng://ngx-videogular/lib/controls/vg-time-display/vg-time-display.ts","ng://ngx-videogular/lib/controls/vg-track-selector/vg-track-selector.ts","ng://ngx-videogular/lib/controls/vg-quality-selector/vg-quality-selector.ts","ng://ngx-videogular/lib/controls/vg-controls.module.ts","ng://ngx-videogular/lib/core/events/vg-events.ts","ng://ngx-videogular/lib/core/vg-media/vg-media.ts","ng://ngx-videogular/lib/core/vg-cue-points/vg-cue-points.ts","ng://ngx-videogular/lib/core/vg-player/vg-player.ts","ng://ngx-videogular/lib/core/vg-media/vg-media-element.ts","ng://ngx-videogular/lib/core/vg-core.module.ts","ng://ngx-videogular/lib/ima-ads/vg-ima-ads.ts","ng://ngx-videogular/lib/ima-ads/ima-ads.module.ts","ng://ngx-videogular/lib/overlay-play/vg-overlay-play.ts","ng://ngx-videogular/lib/overlay-play/vg-overlay-play.module.ts","ng://ngx-videogular/lib/streaming/vg-dash/vg-dash.ts","ng://ngx-videogular/lib/streaming/vg-hls/vg-hls.ts","ng://ngx-videogular/lib/streaming/vg-streaming.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__values","o","m","Symbol","iterator","call","next","value","done","__read","n","e","ar","push","error","VgStates","VG_ENDED","VG_PAUSED","VG_PLAYING","VG_LOADING","Injectable","VgAPI","this","medias","playerReadyEvent","EventEmitter","isPlayerReady","prototype","onPlayerReady","fsAPI","emit","getDefaultMedia","item","getMasterMedia","master","id","vgMaster","isMasterDefined","result","getMediaById","media","play","pause","$$getAllProperties","seconds","$$setAllProperties","state","volume","rate","seekTime","byPercent","$$seek","second","duration","currentTime","addTextTrack","type","label","language","$$addTextTrack","property","keys","current","total","left","registerElement","elem","videogularElement","registerMedia","unregisterMedia","VgBuffering","ref","API","checkInterval","currentPlayPos","lastPlayPos","subscriptions","isBuffering","nativeElement","ngOnInit","_this","subscribe","vgFor","bufferDetected","onUpdateBuffer","ngOnDestroy","forEach","s","unsubscribe","ElementRef","Input","HostBinding","Component","selector","encapsulation","ViewEncapsulation","None","template","VgBufferingModule","NgModule","imports","CommonModule","declarations","exports","VgControlsHidden","isHiddenSubject","Subject","isHidden","asObservable","hidden","VgControls","isAdsPlaying","hideControls","vgAutohide","vgAutohideTime","mouseMove$","fromEvent","show","bind","touchStart$","onPlay","onPause","startAds","onStartAds","endAds","onEndAds","ngAfterViewInit","hide","clearTimeout","timer","hideAsync","setTimeout","VgUtils","getZIndex","elementZIndex","zIndex","tags","document","getElementsByTagName","l","parseInt","window","getComputedStyle","isMobileDevice","orientation","navigator","userAgent","indexOf","isiOSDevice","match","isCordova","URL","providedIn","VgFullscreenAPI","nativeFullscreen","isFullscreen","onChangeFullscreen","init","APIs","w3","enabled","element","request","exit","onchange","onerror","newWebkit","oldWebkit","moz","ios","ms","browser","polyfill","isAvailable","fsElemDispatcher","toArray","fsChangeSubscription","onFullscreenChange","toggleFullscreen","enterElementInFullScreen","VgFullscreen","ariaValue","fsState","onClick","changeFullscreenState","onKeyDown","event","keyCode","preventDefault","HostListener","VgMute","currentVolume","changeMuteState","getVolume","VgVolume","isDragging","setVolume","calculateVolume","clientX","onMouseDown","mouseDownPosX","onDrag","onStopDrag","arrowAdjustVolume","Math","max","min","mousePosX","recObj","volumeBarRef","getBoundingClientRect","width","vol","ViewChild","static","VgPlayPause","playPause","getState","VgPlaybackButton","playbackValues","playbackIndex","updatePlaybackSpeed","playbackRate","getPlaybackRate","VgScrubBar","vgControlsHiddenState","hideScrubBar","vgSlider","isSeeking","wasPlaying","onHideScrubBar","seekStart","canPlay","seekMove","offset","percentage","scrollWidth","time","seekEnd","touchEnd","getTouchOffset","offsetLeft","offsetParent","touches","pageX","onMouseDownScrubBar","$event","isLive","offsetX","onMouseMoveScrubBar","onMouseUpScrubBar","onTouchStartScrubBar","onTouchMoveScrubBar","onTouchCancelScrubBar","onTouchEndScrubBar","getPercentage","VgScrubBarBufferingTime","getBufferTime","bufferTime","buffer","buffered","end","VgScrubBarCuePoints","onLoadedMetadataCalled","cuePoints","totalCues","onTimeUpdate","loadedMetadata","onLoadedMetadata","vgCuePoints","cuePointDuration","endTime","startTime","position","percentWidth","round","$$style","updateCuePoints","ngOnChanges","changes","currentValue","ngDoCheck","VgScrubBarCurrentTime","VgUtcPipe","transform","format","date","Date","ss","getUTCSeconds","mm","getUTCMinutes","hh","getUTCHours","replace","Pipe","name","VgTimeDisplay","vgProperty","vgFormat","getTime","t","isNaN","VgTrackSelector","subs","Array","from","children","filter","tagName","kind","map","selected","default","srclang","tracks","concat","__spread","every","track","trackSelected","selectTrack","trackId","textTracks","mode","VgQualitySelector","onBitrateChange","bitrates","bitrate","toString","selectBitrate","index","bitrateSelected","Output","VgControlsModule","providers","VgEvents","VG_ABORT","VG_CAN_PLAY","VG_CAN_PLAY_THROUGH","VG_DURATION_CHANGE","VG_EMPTIED","VG_ENCRYPTED","VG_ERROR","VG_LOADED_DATA","VG_LOADED_METADATA","VG_LOAD_START","VG_PAUSE","VG_PLAY","VG_PROGRESS","VG_RATE_CHANGE","VG_SEEK","VG_SEEKED","VG_SEEKING","VG_STALLED","VG_SUSPEND","VG_TIME_UPDATE","VG_VOLUME_CHANGE","VG_WAITING","VG_LOAD","VG_ENTER","VG_EXIT","VG_START_ADS","VG_END_ADS","VgMedia","api","canPlayThrough","isMetadataLoaded","isWaiting","isCompleted","isBufferDetected","playAtferSync","vgMedia","nodeName","abort","durationChange","emptied","encrypted","ended","loadedData","loadStart","playing","progress","rateChange","seeked","seeking","stalled","suspend","timeUpdate","volumeChange","waiting","mutation","Observable","observer","domObs","MutationObserver","mutations","observe","childList","attributes","disconnect","mutationObs","onMutation","canPlayObs","onCanPlay","canPlayThroughObs","onCanPlayThrough","loadedMetadataObs","onLoadMetadata","waitingObs","onWait","progressObs","onProgress","endedObs","onComplete","playingObs","onStartPlaying","playObs","pauseObs","timeUpdateObs","volumeChangeObs","onVolumeChange","errorObs","onError","prepareSync","canPlayAll","canPlayAllSubscription","combineLatest","pipe","params","_i","checkReadyState","readyState","allReady","some","syncSubscription","startSync","diff","mut","attributeName","loadMedia","removedNodes","toLowerCase","stopBufferCheck","load","playPromise","then","catch","undefined","detectChanges","Infinity","closed","startBufferCheck","bufferCheck","checkBufferSubscription","newTrack","src","complete","ChangeDetectorRef","Directive","VgCuePoints","onEnterCuePoint","onUpdateCuePoint","onExitCuePoint","onCompleteCuePoint","cuesSubscriptions","onLoad$","onLoad","cues","onEnter$","onEnter","onExit$","onExit","VgPlayer","controlsHidden","isNativeFullscreen","areControlsHidden","onMediaReady","ngAfterContentInit","onHideControls","ContentChildren","VgMediaElement","canPlayType","msClearEffects","msGetAsCastingSource","msInsertAudioEffect","activatableClassId","effectRequired","config","msSetMediaKeys","mediaKeys","msSetMediaProtectionManager","mediaProtectionManager","setMediaKeys","addEventListener","listener","useCapture","VgCoreModule","VgImaAds","onAdStart","onAdStop","onSkipAd","displayState","onContentEnded","google","initializations","onUpdateState","ima","adsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","loadAds","onMissingGoogleImaLoader","Ima","vgSkipButton","skipButton","querySelector","style","display","onClickSkip","insertBefore","firstChild","w","offsetWidth","h","offsetHeight","adsManager","resize","ViewMode","FULLSCREEN","NORMAL","vgCompanion","googletag","cmd","adUnitPath","vgNetwork","vgUnitPath","slot","defineSlot","vgCompanionSize","addService","companionAds","pubads","setRefreshUnfilledSlots","enableVideoAds","enableServices","adsLoaded","adDisplayContainer","initialize","requestAds","vgAdTagUrl","adTagUrl","adsRequest","AdsRequest","computedStyle","linearAdSlotWidth","linearAdSlotHeight","height","nonLinearAdSlotWidth","nonLinearAdSlotHeight","evt","getAdsManager","processAdsManager","AdEvent","CONTENT_PAUSE_REQUESTED","onContentPauseRequested","CONTENT_RESUME_REQUESTED","onContentResumeRequested","SKIPPABLE_STATE_CHANGED","onSkippableStateChanged","ALL_ADS_COMPLETED","onAllAdsComplete","COMPLETE","onAdComplete","start","isSkippable","getAdSkippableState","skip","destroy","getCuePoints","join","currentAd","dispatchEvent","CustomEvent","contentComplete","imaAdsElement","AdDisplayContainer","AdsLoader","VgImaAdsModule","VgOverlayPlay","VgOverlayPlayModule","VgDASH","onGetBitrates","getAttribute","createPlayer","destroyPlayer","dash","vgDash","drmOptions","vgDRMLicenseServer","vgDRMToken","drmServer","hasOwnProperty","httpRequestHeaders","Authorization","dashjs","MediaPlayer","create","getDebug","setLogToBrowserConsole","setAutoPlay","on","events","STREAM_INITIALIZED","audioList","getBitrateInfoListFor","videoList","qualityIndex","unshift","mediaType","setProtectionData","attachSource","setBitrate","getAutoSwitchQualityFor","setAutoSwitchQualityFor","nextIndex","setQualityFor","reset","exportAs","VgHLS","vgHlsHeaders","crossorigin","preload","autoStartLoad","xhrSetup","xhr","url","withCredentials","_b","_c","setRequestHeader","hls","startLoad","vgHls","Hls","isSupported","video","Events","MANIFEST_PARSED","data","levels","LEVEL_LOADED","details","live","loadSource","attachMedia","nextLevel","VgStreamingModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VgStates {\n  static VG_ENDED = 'ended';\n  static VG_PAUSED = 'paused';\n  static VG_PLAYING = 'playing';\n  static VG_LOADING = 'waiting';\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { IPlayable } from '../vg-media/i-playable';\nimport { VgStates } from '../states/vg-states';\nimport { VgFullscreenAPI } from './vg-fullscreen-api';\n\n@Injectable()\nexport class VgAPI {\n  // tslint:disable-next-line:ban-types\n  medias: Object = {}; // TODO: refactor to Set<IPlayable>\n  videogularElement: any;\n  playerReadyEvent: EventEmitter<any> = new EventEmitter(true);\n  isPlayerReady = false;\n  fsAPI: VgFullscreenAPI;\n\n  constructor() {\n\n  }\n\n  onPlayerReady(fsAPI: VgFullscreenAPI) {\n    this.fsAPI = fsAPI;\n    this.isPlayerReady = true;\n    this.playerReadyEvent.emit(this);\n  }\n\n  getDefaultMedia(): IPlayable {\n    for (const item in this.medias) {\n      if (this.medias[item]) {\n        return this.medias[item];\n      }\n    }\n  }\n\n  getMasterMedia(): IPlayable {\n    let master: any;\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        master = this.medias[id];\n        break;\n      }\n    }\n    return master || this.getDefaultMedia();\n  }\n\n  isMasterDefined(): boolean {\n    let result = false;\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        result = true;\n        break;\n      }\n    }\n    return result;\n  }\n\n  getMediaById(id: string = null): IPlayable {\n    let media = this.medias[id];\n\n    if (!id || id === '*') {\n      media = this;\n    }\n\n    return media;\n  }\n\n  play() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].play();\n      }\n    }\n  }\n\n  pause() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].pause();\n      }\n    }\n  }\n\n  get duration() {\n    return this.$$getAllProperties('duration');\n  }\n\n  set currentTime(seconds) {\n    this.$$setAllProperties('currentTime', seconds);\n  }\n\n  get currentTime() {\n    return this.$$getAllProperties('currentTime');\n  }\n\n  set state(state) {\n    this.$$setAllProperties('state', state);\n  }\n\n  get state() {\n    return this.$$getAllProperties('state');\n  }\n\n  set volume(volume) {\n    this.$$setAllProperties('volume', volume);\n  }\n\n  get volume() {\n    return this.$$getAllProperties('volume');\n  }\n\n  set playbackRate(rate) {\n    this.$$setAllProperties('playbackRate', rate);\n  }\n\n  get playbackRate() {\n    return this.$$getAllProperties('playbackRate');\n  }\n\n  get canPlay() {\n    return this.$$getAllProperties('canPlay');\n  }\n\n  get canPlayThrough() {\n    return this.$$getAllProperties('canPlayThrough');\n  }\n\n  get isMetadataLoaded() {\n    return this.$$getAllProperties('isMetadataLoaded');\n  }\n\n  get isWaiting() {\n    return this.$$getAllProperties('isWaiting');\n  }\n\n  get isCompleted() {\n    return this.$$getAllProperties('isCompleted');\n  }\n\n  get isLive() {\n    return this.$$getAllProperties('isLive');\n  }\n\n  get isMaster() {\n    return this.$$getAllProperties('isMaster');\n  }\n\n  get time() {\n    return this.$$getAllProperties('time');\n  }\n\n  get buffer() {\n    return this.$$getAllProperties('buffer');\n  }\n\n  get buffered() {\n    return this.$$getAllProperties('buffered');\n  }\n\n  get subscriptions() {\n    return this.$$getAllProperties('subscriptions');\n  }\n\n  get textTracks() {\n    return this.$$getAllProperties('textTracks');\n  }\n\n  seekTime(value: number, byPercent: boolean = false) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$seek(this.medias[id], value, byPercent);\n      }\n    }\n  }\n\n  $$seek(media: IPlayable, value: number, byPercent: boolean = false) {\n    let second: number;\n    let duration: number = media.duration;\n\n    if (byPercent) {\n      if (this.isMasterDefined()) {\n        duration = this.getMasterMedia().duration;\n      }\n\n      second = value * duration / 100;\n    } else {\n      second = value;\n    }\n\n    media.currentTime = second;\n  }\n\n  addTextTrack(type: string, label?: string, language?: string) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$addTextTrack(this.medias[id], type, label, language);\n      }\n    }\n  }\n  $$addTextTrack(media: IPlayable, type: string, label?: string, language?: string) {\n    media.addTextTrack(type, label, language);\n  }\n\n  $$getAllProperties(property: string) {\n    const medias = {};\n    let result: any;\n\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        medias[id] = this.medias[id];\n      }\n    }\n\n    const nMedias = Object.keys(medias).length;\n    switch (nMedias) {\n      case 0:\n        // Return default values until vgMedia is initialized\n        switch (property) {\n          case 'state':\n            result = VgStates.VG_PAUSED;\n            break;\n\n          case 'playbackRate':\n          case 'volume':\n            result = 1;\n            break;\n\n          case 'time':\n            result = { current: 0, total: 0, left: 0 };\n            break;\n        }\n        break;\n\n      case 1:\n        // If there's only one media element then return the plain value\n        const firstMediaId = Object.keys(medias)[0];\n        result = medias[firstMediaId][property];\n        break;\n\n      default:\n        // TODO: return 'master' value\n        const master = this.getMasterMedia();\n        result = medias[master.id][property];\n    }\n\n    return result;\n  }\n\n  $$setAllProperties(property: string, value: any) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id][property] = value;\n      }\n    }\n  }\n\n  registerElement(elem: HTMLElement) {\n    this.videogularElement = elem;\n  }\n\n  registerMedia(media: IPlayable) {\n    this.medias[media.id] = media;\n  }\n\n  unregisterMedia(media: IPlayable) {\n    delete this.medias[media.id];\n  }\n\n\n}\n","import { Component, ElementRef, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { VgAPI } from '../core/services/vg-api';\nimport { IPlayable } from '../core/vg-media/i-playable';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-buffering',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vg-buffering\">\n            <div class=\"bufferingContainer\">\n                <div class=\"loadingSpinner\"></div>\n            </div>\n        </div>`,\n  styles: [`\n        vg-buffering {\n            display: none;\n            z-index: 201;\n        }\n        vg-buffering.is-buffering {\n            display: block;\n        }\n\n        .vg-buffering {\n            position: absolute;\n            display: block;\n            width: 100%;\n            height: 100%;\n        }\n        .vg-buffering .bufferingContainer {\n            width: 100%;\n            position: absolute;\n            cursor: pointer;\n            top: 50%;\n            margin-top: -50px;\n            zoom: 1;\n            filter: alpha(opacity=60);\n            opacity: 0.6;\n        }\n        /* Loading Spinner\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\n        */\n        .vg-buffering .loadingSpinner {\n            background-color: rgba(0, 0, 0, 0);\n            border: 5px solid rgba(255, 255, 255, 1);\n            opacity: .9;\n            border-top: 5px solid rgba(0, 0, 0, 0);\n            border-left: 5px solid rgba(0, 0, 0, 0);\n            border-radius: 50px;\n            box-shadow: 0 0 35px #FFFFFF;\n            width: 50px;\n            height: 50px;\n            margin: 0 auto;\n            -moz-animation: spin .5s infinite linear;\n            -webkit-animation: spin .5s infinite linear;\n        }\n        .vg-buffering .loadingSpinner .stop {\n            -webkit-animation-play-state: paused;\n            -moz-animation-play-state: paused;\n        }\n        @-moz-keyframes spin {\n            0% {\n                -moz-transform: rotate(0deg);\n            }\n            100% {\n                -moz-transform: rotate(360deg);\n            }\n        }\n        @-moz-keyframes spinoff {\n            0% {\n                -moz-transform: rotate(0deg);\n            }\n            100% {\n                -moz-transform: rotate(-360deg);\n            }\n        }\n        @-webkit-keyframes spin {\n            0% {\n                -webkit-transform: rotate(0deg);\n            }\n            100% {\n                -webkit-transform: rotate(360deg);\n            }\n        }\n        @-webkit-keyframes spinoff {\n            0% {\n                -webkit-transform: rotate(0deg);\n            }\n            100% {\n                -webkit-transform: rotate(-360deg);\n            }\n        }\n    ` ]\n})\nexport class VgBuffering implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: IPlayable;\n  checkInterval = 50;\n  currentPlayPos = 0;\n  lastPlayPos = 0;\n\n  subscriptions: Subscription[] = [];\n\n  @HostBinding('class.is-buffering') isBuffering = false;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    this.subscriptions.push(\n      this.target.subscriptions.bufferDetected.subscribe(\n        isBuffering => this.onUpdateBuffer(isBuffering)\n      )\n    );\n  }\n\n  onUpdateBuffer(isBuffering) {\n    this.isBuffering = isBuffering;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VgBuffering } from './vg-buffering';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    VgBuffering\n  ],\n  exports: [\n    VgBuffering\n  ]\n})\nexport class VgBufferingModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class VgControlsHidden {\n  isHidden: Observable<boolean>;\n\n  private isHiddenSubject: Subject<boolean> = new Subject<boolean>();\n\n  constructor() {\n    this.isHidden = this.isHiddenSubject.asObservable();\n  }\n\n  state(hidden: boolean) {\n    this.isHiddenSubject.next(hidden);\n  }\n}\n","import {\n  Component, Input, OnInit, ElementRef, HostBinding, AfterViewInit, ViewEncapsulation,\n  EventEmitter, Output, OnDestroy\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { VgAPI } from '../core/services/vg-api';\nimport { VgControlsHidden } from '../core/services/vg-controls-hidden';\n\nimport { VgStates } from '../core/states/vg-states';\nimport { fromEvent } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-controls',\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content>`,\n  styles: [`\n        vg-controls {\n            position: absolute;\n            display: flex;\n            width: 100%;\n            height: 50px;\n            z-index: 300;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n            -webkit-transition: bottom 1s;\n            -khtml-transition: bottom 1s;\n            -moz-transition: bottom 1s;\n            -ms-transition: bottom 1s;\n            transition: bottom 1s;\n        }\n        vg-controls.hide {\n            bottom: -50px;\n        }\n    `]\n})\nexport class VgControls implements OnInit, AfterViewInit, OnDestroy {\n  elem: HTMLElement;\n  target: any;\n\n  @HostBinding('style.pointer-events') isAdsPlaying = 'initial';\n  @HostBinding('class.hide') hideControls = false;\n\n  @Input() vgFor: string;\n  @Input() vgAutohide = false;\n  @Input() vgAutohideTime = 3;\n\n  private timer: any;\n  private hideTimer: any;\n\n  mouseMove$: Observable<any>;\n  touchStart$: Observable<any>;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private API: VgAPI, private ref: ElementRef, private hidden: VgControlsHidden) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    this.mouseMove$ = fromEvent(this.API.videogularElement, 'mousemove');\n    this.subscriptions.push(this.mouseMove$.subscribe(this.show.bind(this)));\n\n    this.touchStart$ = fromEvent(this.API.videogularElement, 'touchstart');\n    this.subscriptions.push(this.touchStart$.subscribe(this.show.bind(this)));\n\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onPlay.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.pause.subscribe(this.onPause.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.startAds.subscribe(this.onStartAds.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.endAds.subscribe(this.onEndAds.bind(this)));\n  }\n\n  ngAfterViewInit() {\n    if (this.vgAutohide) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  onPlay() {\n    if (this.vgAutohide) {\n      this.hide();\n    }\n  }\n\n  onPause() {\n    clearTimeout(this.timer);\n    this.hideControls = false;\n    this.hidden.state(false);\n  }\n\n  onStartAds() {\n    this.isAdsPlaying = 'none';\n  }\n\n  onEndAds() {\n    this.isAdsPlaying = 'initial';\n  }\n\n  hide() {\n    if (this.vgAutohide) {\n      clearTimeout(this.timer);\n      this.hideAsync();\n    }\n  }\n\n  show() {\n    clearTimeout(this.timer);\n    this.hideControls = false;\n    this.hidden.state(false);\n\n    if (this.vgAutohide) {\n      this.hideAsync();\n    }\n  }\n\n  private hideAsync() {\n    if (this.API.state === VgStates.VG_PLAYING) {\n      this.timer = setTimeout(() => {\n        this.hideControls = true;\n        this.hidden.state(true);\n      }, this.vgAutohideTime * 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VgUtils {\n  /**\n   * Inspired by Paul Irish\n   * https://gist.github.com/paulirish/211209\n   * @returns z-Index\n   */\n  static getZIndex(): number {\n    let zIndex = 1;\n    let elementZIndex: number;\n\n    const tags = document.getElementsByTagName('*');\n\n    for (let i = 0, l = tags.length; i < l; i++) {\n      elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n\n      if (elementZIndex > zIndex) {\n        zIndex = elementZIndex + 1;\n      }\n    }\n\n    return zIndex;\n  }\n\n  // Very simple mobile detection, not 100% reliable\n  static isMobileDevice() {\n    return (typeof window.orientation !== 'undefined') || (navigator.userAgent.indexOf('IEMobile') !== -1);\n  }\n\n  static isiOSDevice() {\n    return (navigator.userAgent.match(/ip(hone|ad|od)/i) && !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i));\n  }\n\n  static isCordova() {\n    return document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1;\n  }\n}\n","import { EventEmitter, Injectable, QueryList } from '@angular/core';\nimport { VgUtils } from './vg-utils';\nimport { VgMedia } from '../vg-media/vg-media';\nimport { Subscription, fromEvent } from 'rxjs';\n\n@Injectable()\nexport class VgFullscreenAPI {\n  polyfill: any;\n  onchange: string;\n  onerror: string;\n  nativeFullscreen = true;\n  isFullscreen = false;\n  isAvailable: boolean;\n  videogularElement: HTMLElement;\n  medias: QueryList<VgMedia>;\n\n  fsChangeSubscription: Subscription;\n  onChangeFullscreen: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n  }\n\n  init(elem: HTMLElement, medias: QueryList<VgMedia>) {\n    this.videogularElement = elem;\n    this.medias = medias;\n\n    const APIs = {\n      w3: {\n        enabled: 'fullscreenEnabled',\n        element: 'fullscreenElement',\n        request: 'requestFullscreen',\n        exit: 'exitFullscreen',\n        onchange: 'fullscreenchange',\n        onerror: 'fullscreenerror'\n      },\n      newWebkit: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitRequestFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      oldWebkit: {\n        enabled: 'webkitIsFullScreen',\n        element: 'webkitCurrentFullScreenElement',\n        request: 'webkitRequestFullScreen',\n        exit: 'webkitCancelFullScreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      moz: {\n        enabled: 'mozFullScreen',\n        element: 'mozFullScreenElement',\n        request: 'mozRequestFullScreen',\n        exit: 'mozCancelFullScreen',\n        onchange: 'mozfullscreenchange',\n        onerror: 'mozfullscreenerror'\n      },\n      ios: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitEnterFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitendfullscreen', // Hack for iOS: webkitfullscreenchange it's not firing\n        onerror: 'webkitfullscreenerror'\n      },\n      ms: {\n        enabled: 'msFullscreenEnabled',\n        element: 'msFullscreenElement',\n        request: 'msRequestFullscreen',\n        exit: 'msExitFullscreen',\n        onchange: 'MSFullscreenChange',\n        onerror: 'MSFullscreenError'\n      }\n    };\n\n    for (const browser in APIs) {\n      if (APIs[browser].enabled in document) {\n        this.polyfill = APIs[browser];\n        break;\n      }\n    }\n\n    if (VgUtils.isiOSDevice()) {\n      this.polyfill = APIs.ios;\n    }\n\n    this.isAvailable = (this.polyfill != null);\n\n    if (this.polyfill == null) {\n      return;\n    }\n\n    let fsElemDispatcher;\n\n    switch (this.polyfill.onchange) {\n      // Mozilla dispatches the fullscreen change event from document, not the element\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n      case 'mozfullscreenchange':\n        fsElemDispatcher = document;\n        break;\n\n      // iOS dispatches the fullscreen change event from video element\n      case 'webkitendfullscreen':\n        fsElemDispatcher = this.medias.toArray()[0].elem;\n        break;\n\n      // HTML5 implementation dispatches the fullscreen change event from the element\n      default:\n        fsElemDispatcher = elem;\n    }\n\n    this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe(() => {\n      this.onFullscreenChange();\n    });\n  }\n\n  onFullscreenChange() {\n    this.isFullscreen = !!document[this.polyfill.element];\n    this.onChangeFullscreen.emit(this.isFullscreen);\n  }\n\n  toggleFullscreen(element: any = null) {\n    if (this.isFullscreen) {\n      this.exit();\n    }  else {\n      this.request(element);\n    }\n  }\n\n  request(elem: any) {\n    if (!elem) {\n      elem = this.videogularElement;\n    }\n\n    this.isFullscreen = true;\n    this.onChangeFullscreen.emit(true);\n\n    // Perform native full screen support\n    if (this.isAvailable && this.nativeFullscreen) {\n      // Fullscreen for mobile devices\n      if (VgUtils.isMobileDevice()) {\n        // We should make fullscreen the video object if it doesn't have native fullscreen support\n        // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n        if ((!this.polyfill.enabled && elem === this.videogularElement) || VgUtils.isiOSDevice()) {\n          elem = this.medias.toArray()[0].elem;\n        }\n\n        this.enterElementInFullScreen(elem);\n      }  else {\n        this.enterElementInFullScreen(this.videogularElement);\n      }\n    }\n  }\n\n  enterElementInFullScreen(elem: any) {\n    elem[this.polyfill.request]();\n  }\n\n  exit() {\n    this.isFullscreen = false;\n    this.onChangeFullscreen.emit(false);\n\n    // Exit from native fullscreen\n    if (this.isAvailable && this.nativeFullscreen) {\n      document[this.polyfill.exit]();\n    }\n  }\n}\n","import { Component, ElementRef, HostListener, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { VgFullscreenAPI } from '../../core/services/vg-fullscreen-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n// tslint:disable:ban-types\n@Component({\n  selector: 'vg-fullscreen',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"icon\"\n             [class.vg-icon-fullscreen]=\"!isFullscreen\"\n             [class.vg-icon-fullscreen_exit]=\"isFullscreen\"\n             tabindex=\"0\"\n             role=\"button\"\n             aria-label=\"fullscreen button\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n  styles: [`\n        vg-fullscreen {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n\n        vg-fullscreen .icon {\n            pointer-events: none;\n        }\n    ` ]\n})\nexport class VgFullscreen implements OnInit, OnDestroy {\n  elem: HTMLElement;\n  vgFor: string;\n  target: Object;\n  isFullscreen = false;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = 'normal mode';\n\n  constructor(ref: ElementRef, public API: VgAPI, public fsAPI: VgFullscreenAPI) {\n    this.elem = ref.nativeElement;\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    this.ariaValue = fsState ? 'fullscren mode' : 'normal mode';\n    this.isFullscreen = fsState;\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.changeFullscreenState();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.changeFullscreenState();\n    }\n  }\n\n  changeFullscreenState() {\n    let element = this.target;\n\n    if (this.target instanceof VgAPI) {\n      element = null;\n    }\n\n    this.fsAPI.toggleFullscreen(element);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, Input, ElementRef, HostListener, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-mute',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"icon\"\n             [class.vg-icon-volume_up]=\"getVolume() >= 0.75\"\n             [class.vg-icon-volume_down]=\"getVolume() >= 0.25 && getVolume() < 0.75\"\n             [class.vg-icon-volume_mute]=\"getVolume() > 0 && getVolume() < 0.25\"\n             [class.vg-icon-volume_off]=\"getVolume() === 0\"\n             tabindex=\"0\"\n             role=\"button\"\n             aria-label=\"mute button\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n  styles: [`\n        vg-mute {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-mute .icon {\n            pointer-events: none;\n        }\n    ` ]\n})\nexport class VgMute implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  elem: HTMLElement;\n  target: any;\n\n  currentVolume: number;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = 'unmuted';\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.currentVolume = this.target.volume;\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.changeMuteState();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.changeMuteState();\n    }\n  }\n\n  changeMuteState() {\n    const volume = this.getVolume();\n\n    if (volume === 0) {\n      if (this.target.volume === 0 && this.currentVolume === 0) {\n        this.currentVolume = 1;\n      }\n\n      this.target.volume = this.currentVolume;\n    } else {\n      this.currentVolume = volume;\n      this.target.volume = 0;\n    }\n  }\n\n  getVolume() {\n    const volume = this.target ? this.target.volume : 0;\n    this.ariaValue = volume ? 'unmuted' : 'muted';\n    return volume;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  HostListener,\n  OnInit,\n  ViewEncapsulation,\n  ViewChild,\n  OnDestroy\n} from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-volume',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div\n            #volumeBar\n            class=\"volumeBar\"\n            tabindex=\"0\"\n            role=\"slider\"\n            aria-label=\"volume level\"\n            aria-level=\"polite\"\n            [attr.aria-valuenow]=\"ariaValue\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-orientation=\"horizontal\"\n            [attr.aria-valuetext]=\"ariaValue + '%'\"\n            (click)=\"onClick($event)\"\n            (mousedown)=\"onMouseDown($event)\">\n            <div class=\"volumeBackground\" [ngClass]=\"{dragging: isDragging}\">\n                <div class=\"volumeValue\" [style.width]=\"(getVolume() * (100-15)) + '%'\"></div>\n                <div class=\"volumeKnob\" [style.left]=\"(getVolume() * (100-15)) + '%'\"></div>\n            </div>\n        </div>\n    `,\n  styles: [\n    `\n        vg-volume {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 100px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-volume .volumeBar {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n        }\n        vg-volume .volumeBackground {\n            display: flex;\n            flex-grow: 1;\n            height: 5px;\n            pointer-events: none;\n            background-color: #333;\n        }\n        vg-volume .volumeValue {\n            display: flex;\n            height: 5px;\n            pointer-events: none;\n            background-color: #FFF;\n            transition:all 0.2s ease-out;\n        }\n        vg-volume .volumeKnob {\n            position: absolute;\n            width: 15px; height: 15px;\n            left: 0; top: 50%;\n            transform: translateY(-50%);\n            border-radius: 15px;\n            pointer-events: none;\n            background-color: #FFF;\n            transition:all 0.2s ease-out;\n        }\n        vg-volume .volumeBackground.dragging .volumeValue,\n        vg-volume .volumeBackground.dragging .volumeKnob {\n            transition: none;\n        }\n    `\n  ]\n})\nexport class VgVolume implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @ViewChild('volumeBar', { static: true })\n  volumeBarRef: ElementRef;\n\n  elem: HTMLElement;\n  target: any;\n  isDragging: boolean;\n  mouseDownPosX: number;\n  ariaValue: number;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n    this.isDragging = false;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.ariaValue = this.getVolume() * 100;\n  }\n\n  onClick(event: { clientX: number }) {\n    this.setVolume(this.calculateVolume(event.clientX));\n  }\n\n  onMouseDown(event: { clientX: number }) {\n    this.mouseDownPosX = event.clientX;\n    this.isDragging = true;\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  onDrag(event: { clientX: number }) {\n    if (this.isDragging) {\n      this.setVolume(this.calculateVolume(event.clientX));\n    }\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onStopDrag(event: { clientX: number }) {\n    if (this.isDragging) {\n      this.isDragging = false;\n      if (this.mouseDownPosX === event.clientX) {\n        this.setVolume(this.calculateVolume(event.clientX));\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  arrowAdjustVolume(event: KeyboardEvent) {\n    if (event.keyCode === 38 || event.keyCode === 39) {\n      event.preventDefault();\n      this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 + 10)));\n    } else if (event.keyCode === 37 || event.keyCode === 40) {\n      event.preventDefault();\n      this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 - 10)));\n    }\n  }\n\n  calculateVolume(mousePosX: number) {\n    const recObj = this.volumeBarRef.nativeElement.getBoundingClientRect();\n    const volumeBarOffsetLeft: number = recObj.left;\n    const volumeBarWidth: number = recObj.width;\n    return (mousePosX - volumeBarOffsetLeft) / volumeBarWidth * 100;\n  }\n\n  setVolume(vol: number) {\n    this.target.volume = Math.max(0, Math.min(1, vol / 100));\n    this.ariaValue = this.target.volume * 100;\n  }\n\n  getVolume(): number {\n    return this.target ? this.target.volume : 0;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import { Component, ElementRef, HostListener, OnInit, Input, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { VgStates } from '../../core/states/vg-states';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-play-pause',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"icon\"\n             [class.vg-icon-pause]=\"getState() === 'playing'\"\n             [class.vg-icon-play_arrow]=\"getState() === 'paused' || getState() === 'ended'\"\n             tabindex=\"0\"\n             role=\"button\"\n             [attr.aria-label]=\"getState() === 'paused'?'play':'pause'\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n  styles: [`\n        vg-play-pause {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-play-pause .icon {\n            pointer-events: none;\n        }\n    ` ]\n})\nexport class VgPlayPause implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = VgStates.VG_PAUSED;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.playPause();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.playPause();\n    }\n  }\n\n  playPause() {\n    const state = this.getState();\n\n    switch (state) {\n      case VgStates.VG_PLAYING:\n        this.target.pause();\n        break;\n\n      case VgStates.VG_PAUSED:\n      case VgStates.VG_ENDED:\n        this.target.play();\n        break;\n    }\n  }\n\n  getState() {\n    this.ariaValue = this.target ? this.target.state : VgStates.VG_PAUSED;\n    return this.ariaValue;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, Input, ElementRef, HostListener, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-playback-button',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span class=\"button\"\n          tabindex=\"0\"\n          role=\"button\"\n          aria-label=\"playback speed button\"\n          [attr.aria-valuetext]=\"ariaValue\">\n        {{getPlaybackRate()}}x\n    </span>`,\n  styles: [`\n        vg-playback-button {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        }\n        vg-playback-button .button {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 50px;\n        }\n    ` ]\n})\nexport class VgPlaybackButton implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n\n  @Input() playbackValues: Array<string>;\n  playbackIndex: number;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = 1;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n    this.playbackValues = ['0.5', '1.0', '1.5', '2.0'];\n    this.playbackIndex = 1;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.updatePlaybackSpeed();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.updatePlaybackSpeed();\n    }\n  }\n\n  updatePlaybackSpeed() {\n    this.playbackIndex = ++this.playbackIndex % this.playbackValues.length;\n\n    if (this.target instanceof VgAPI) {\n      this.target.playbackRate = (this.playbackValues[this.playbackIndex]);\n    } else {\n      this.target.playbackRate[this.vgFor] = (this.playbackValues[this.playbackIndex]);\n    }\n  }\n\n  getPlaybackRate() {\n    this.ariaValue = this.target ? this.target.playbackRate : 1.0;\n    return this.ariaValue;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import {\n  Component, ElementRef, Input, HostListener, OnInit, ViewEncapsulation, HostBinding,\n  OnDestroy\n} from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { VgControlsHidden } from '../../core/services/vg-controls-hidden';\nimport { VgStates } from '../../core/states/vg-states';\nimport { Subscription } from 'rxjs';\n\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-scrub-bar',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"scrubBar\"\n             tabindex=\"0\"\n             role=\"slider\"\n             aria-label=\"scrub bar\"\n             aria-level=\"polite\"\n             [attr.aria-valuenow]=\"getPercentage()\"\n             aria-valuemin=\"0\"\n             aria-valuemax=\"100\"\n             [attr.aria-valuetext]=\"getPercentage() + '%'\">\n            <ng-content></ng-content>\n        </div>\n    `,\n  styles: [`\n        vg-scrub-bar {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            position: absolute;\n            width: 100%;\n            height: 5px;\n            bottom: 50px;\n            margin: 0;\n            cursor: pointer;\n            align-items: center;\n            background: rgba(0, 0, 0, 0.75);\n            z-index: 250;\n            -webkit-transition: bottom 1s, opacity 0.5s;\n            -khtml-transition: bottom 1s, opacity 0.5s;\n            -moz-transition: bottom 1s, opacity 0.5s;\n            -ms-transition: bottom 1s, opacity 0.5s;\n            transition: bottom 1s, opacity 0.5s;\n        }\n        vg-scrub-bar .scrubBar {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n            height: 100%;\n        }\n        vg-controls vg-scrub-bar {\n            position: relative;\n            bottom: 0;\n            background: transparent;\n            height: 50px;\n            flex-grow: 1;\n            flex-basis: 0;\n            margin: 0 10px;\n            -webkit-transition: initial;\n            -khtml-transition: initial;\n            -moz-transition: initial;\n            -ms-transition: initial;\n            transition: initial;\n        }\n        vg-scrub-bar.hide {\n            bottom: 0;\n            opacity: 0;\n        }\n        vg-controls vg-scrub-bar.hide {\n            bottom: initial;\n            opacity: initial;\n        }\n    ` ]\n})\nexport class VgScrubBar implements OnInit, OnDestroy {\n  @HostBinding('class.hide') hideScrubBar = false;\n\n  @Input() vgFor: string;\n  @Input() vgSlider = true;\n\n  elem: HTMLElement;\n  target: any;\n  isSeeking = false;\n  wasPlaying = false;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgAPI, vgControlsHiddenState: VgControlsHidden) {\n    this.elem = ref.nativeElement;\n    this.subscriptions.push(vgControlsHiddenState.isHidden.subscribe(hide => this.onHideScrubBar(hide)));\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  protected seekStart() {\n    if (this.target.canPlay) {\n      this.isSeeking = true;\n      if (this.target.state === VgStates.VG_PLAYING) {\n        this.wasPlaying = true;\n      }\n      this.target.pause();\n    }\n  }\n\n  protected seekMove(offset: number) {\n    if (this.isSeeking) {\n      const percentage = Math.max(Math.min(offset * 100 / this.elem.scrollWidth, 99.9), 0);\n      this.target.time.current = percentage * this.target.time.total / 100;\n      this.target.seekTime(percentage, true);\n    }\n  }\n\n  protected seekEnd(offset: number) {\n    this.isSeeking = false;\n    if (this.target.canPlay) {\n      const percentage = Math.max(Math.min(offset * 100 / this.elem.scrollWidth, 99.9), 0);\n      this.target.seekTime(percentage, true);\n      if (this.wasPlaying) {\n        this.wasPlaying = false;\n        this.target.play();\n      }\n    }\n  }\n\n  protected touchEnd() {\n    this.isSeeking = false;\n    if (this.wasPlaying) {\n      this.wasPlaying = false;\n      this.target.play();\n    }\n  }\n\n  protected getTouchOffset(event: any) {\n    let offsetLeft = 0;\n    let element: any = event.target;\n    while (element) {\n      offsetLeft += element.offsetLeft;\n      element = element.offsetParent;\n    }\n    return event.touches[0].pageX - offsetLeft;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDownScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive) {\n        if (!this.vgSlider) {\n          this.seekEnd($event.offsetX);\n        } else {\n          this.seekStart();\n        }\n      }\n    }\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  onMouseMoveScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekMove($event.offsetX);\n      }\n    }\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onMouseUpScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekEnd($event.offsetX);\n      }\n    }\n  }\n\n  @HostListener('touchstart', ['$event'])\n  onTouchStartScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive) {\n        if (!this.vgSlider) {\n          this.seekEnd(this.getTouchOffset($event));\n        } else {\n          this.seekStart();\n        }\n      }\n    }\n  }\n\n  @HostListener('document:touchmove', ['$event'])\n  onTouchMoveScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekMove(this.getTouchOffset($event));\n      }\n    }\n  }\n  // @ts-ignore\n  @HostListener('document:touchcancel', ['$event']) onTouchCancelScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.touchEnd();\n      }\n    }\n  }\n  // @ts-ignore\n  @HostListener('document:touchend', ['$event']) onTouchEndScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.touchEnd();\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  arrowAdjustVolume(event: KeyboardEvent) {\n    if (this.target) {\n      if (event.keyCode === 38 || event.keyCode === 39) {\n        event.preventDefault();\n        this.target.seekTime((this.target.time.current + 5000) / 1000, false);\n      } else if (event.keyCode === 37 || event.keyCode === 40) {\n        event.preventDefault();\n        this.target.seekTime((this.target.time.current - 5000) / 1000, false);\n      }\n    }\n  }\n\n  getPercentage() {\n    return this.target ? ((this.target.time.current * 100) / this.target.time.total) + '%' : '0%';\n  }\n\n  onHideScrubBar(hide: boolean) {\n    this.hideScrubBar = hide;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, Input, ElementRef, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-scrub-bar-buffering-time',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"background\" [style.width]=\"getBufferTime()\"></div>`,\n  styles: [`\n        vg-scrub-bar-buffering-time {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-buffering-time .background {\n            background-color: rgba(255, 255, 255, 0.3);\n        }\n        vg-controls vg-scrub-bar-buffering-time {\n            position: absolute;\n            top: calc(50% - 3px);\n        }\n        vg-controls vg-scrub-bar-buffering-time .background {\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n    ` ]\n})\nexport class VgScrubBarBufferingTime implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getBufferTime() {\n    let bufferTime = '0%';\n\n    if (this.target && this.target.buffer && this.target.buffered.length) {\n      if (this.target.time.total === 0) {\n        bufferTime = '0%';\n      } else {\n        bufferTime = ((this.target.buffer.end / this.target.time.total) * 100) + '%';\n      }\n    }\n\n    return bufferTime;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  DoCheck,\n  SimpleChange,\n  ViewEncapsulation\n} from '@angular/core';\nimport { VgAPI } from '../../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:no-conflicting-lifecycle\n// tslint:disable:component-class-suffix\n// tslint:disable:no-string-literal\n@Component({\n  selector: 'vg-scrub-bar-cue-points',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"cue-point-container\">\n            <span *ngFor=\"let cp of cuePoints\" [style.width]=\"cp.$$style?.width\" [style.left]=\"cp.$$style?.left\"\n                  class=\"cue-point\"></span>\n        </div>\n    `,\n  styles: [`\n        vg-scrub-bar-cue-points {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-cue-points .cue-point-container .cue-point {\n            position: absolute;\n            height: 5px;\n            background-color: rgba(255, 204, 0, 0.7);\n        }\n        vg-controls vg-scrub-bar-cue-points {\n            position: absolute;\n            top: calc(50% - 3px);\n        }\n    ` ]\n})\nexport class VgScrubBarCuePoints implements OnInit, OnChanges, OnDestroy, DoCheck {\n  @Input() vgCuePoints: TextTrackCueList;\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n  onLoadedMetadataCalled = false;\n  cuePoints: Array<any> = [];\n\n  subscriptions: Subscription[] = [];\n\n  totalCues = 0;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    const onTimeUpdate = this.target.subscriptions.loadedMetadata;\n    this.subscriptions.push(onTimeUpdate.subscribe(this.onLoadedMetadata.bind(this)));\n\n    if (this.onLoadedMetadataCalled) {\n      this.onLoadedMetadata();\n    }\n  }\n\n  onLoadedMetadata() {\n    if (this.vgCuePoints) {\n      // We need to transform the TextTrackCueList to Array or it doesn't work on IE11/Edge.\n      // See: https://github.com/videogular/videogular2/issues/369\n      this.cuePoints = [];\n\n      for (let i = 0, l = this.vgCuePoints.length; i < l; i++) {\n        const end = (this.vgCuePoints[i].endTime >= 0) ? this.vgCuePoints[i].endTime : this.vgCuePoints[i].startTime + 1;\n        const cuePointDuration = (end - this.vgCuePoints[i].startTime) * 1000;\n        let position = '0';\n        let percentWidth = '0';\n\n        if (typeof cuePointDuration === 'number' && this.target.time.total) {\n          percentWidth = ((cuePointDuration * 100) / this.target.time.total) + '%';\n          position = (this.vgCuePoints[i].startTime * 100 / (Math.round(this.target.time.total / 1000))) + '%';\n        }\n\n        (this.vgCuePoints[i] as any).$$style = {\n          width: percentWidth,\n          left: position\n        };\n\n        this.cuePoints.push(this.vgCuePoints[i]);\n      }\n    }\n  }\n\n  updateCuePoints() {\n    if (!this.target) {\n      this.onLoadedMetadataCalled = true;\n      return;\n    }\n    this.onLoadedMetadata();\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    if (changes['vgCuePoints'].currentValue) {\n      this.updateCuePoints();\n    }\n  }\n\n  ngDoCheck() {\n    if (this.vgCuePoints) {\n      const changes = this.totalCues !== this.vgCuePoints.length;\n\n      if (changes) {\n        this.totalCues = this.vgCuePoints.length;\n        this.updateCuePoints();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, Input, ElementRef, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-scrub-bar-current-time',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"background\" [style.width]=\"getPercentage()\"></div><span class=\"slider\" *ngIf=\"vgSlider\"></span>`,\n  styles: [`\n        vg-scrub-bar-current-time {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-current-time .background {\n            background-color: white;\n        }\n        vg-controls vg-scrub-bar-current-time {\n            position: absolute;\n            top: calc(50% - 3px);\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n        vg-controls vg-scrub-bar-current-time .background {\n            border: 1px solid white;\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n\n        vg-scrub-bar-current-time .slider{\n            background: white;\n            height: 15px;\n            width: 15px;\n            border-radius: 50%;\n            box-shadow: 0px 0px 10px black;\n            margin-top: -5px;\n            margin-left: -10px;\n        }\n    ` ]\n})\nexport class VgScrubBarCurrentTime implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgSlider = false;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getPercentage() {\n    return this.target ? ((this.target.time.current * 100) / this.target.time.total) + '%' : '0%';\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, Input, ElementRef, OnInit, PipeTransform, Pipe, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// Workaround until we can use UTC with Angular Date Pipe\n@Pipe({ name: 'vgUtc' })\nexport class VgUtcPipe implements PipeTransform {\n  transform(value: number, format: string): string {\n    const date = new Date(value);\n    let result = format;\n    let ss: string | number = date.getUTCSeconds();\n    let mm: string | number = date.getUTCMinutes();\n    let hh: string | number = date.getUTCHours();\n\n    if (ss < 10) {\n      ss = '0' + ss;\n    }\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n    if (hh < 10) {\n      hh = '0' + hh;\n    }\n\n    result = result.replace(/ss/g, ss as string);\n    result = result.replace(/mm/g, mm as string);\n    result = result.replace(/hh/g, hh as string);\n\n    return result;\n  }\n}\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-time-display',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <span *ngIf=\"target?.isLive\">LIVE</span>\n        <span *ngIf=\"!target?.isLive\">{{ getTime() | vgUtc:vgFormat }}</span>\n        <ng-content></ng-content>\n    `,\n  styles: [`\n        vg-time-display {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 60px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n            pointer-events: none;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        }\n    ` ]\n})\nexport class VgTimeDisplay implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgProperty = 'current';\n  @Input() vgFormat = 'mm:ss';\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getTime() {\n    let t = 0;\n\n    if (this.target) {\n      t = Math.round(this.target.time[this.vgProperty]);\n      t = isNaN(t) || this.target.isLive ? 0 : t;\n    }\n\n    return t;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, ElementRef, OnInit, Input, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\nexport interface Option {\n  id: string;\n  label: string;\n  selected: boolean;\n}\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-track-selector',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"container\">\n            <div class=\"track-selected\"\n                [class.vg-icon-closed_caption]=\"!trackSelected\">\n                {{ trackSelected || '' }}\n            </div>\n\n            <select class=\"trackSelector\"\n                    (change)=\"selectTrack($event.target.value)\"\n                    tabindex=\"0\"\n                    aria-label=\"track selector\"\n                    [attr.aria-valuetext]=\"ariaValue\">\n                <option\n                    *ngFor=\"let track of tracks\"\n                    [value]=\"track.id\"\n                    [selected]=\"track.selected === true\">\n                    {{ track.label }}\n                </option>\n            </select>\n        </div>\n    `,\n  styles: [`\n        vg-track-selector {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            width: 50px;\n            height: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-track-selector .container {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n\n            padding: 0;\n            margin: 5px;\n        }\n        vg-track-selector select.trackSelector {\n            width: 50px;\n            padding: 5px 8px;\n            border: none;\n            background: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            color: transparent;\n            font-size: 16px;\n        }\n        vg-track-selector select.trackSelector::-ms-expand {\n            display: none;\n        }\n        vg-track-selector select.trackSelector option {\n            color: #000;\n        }\n        vg-track-selector .track-selected {\n            position: absolute;\n            width: 100%;\n            height: 50px;\n            top: -6px;\n            text-align: center;\n            text-transform: uppercase;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n            padding-top: 2px;\n            pointer-events: none;\n        }\n        vg-track-selector .vg-icon-closed_caption:before {\n            width: 100%;\n        }\n    ` ]\n})\nexport class VgTrackSelector implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n  tracks: Array<Option>;\n  trackSelected: string;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue: string;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    const subs: Array<Option> = Array.from((this.API.getMasterMedia().elem as HTMLMediaElement).children)\n      .filter((item: HTMLElement) => item.tagName === 'TRACK')\n      .filter((item: HTMLTrackElement) => item.kind === 'subtitles')\n      .map((item: HTMLTrackElement) => ({\n        label: item.label,\n        selected: item.default === true,\n        id: item.srclang\n      }));\n\n    this.tracks = [\n      ...subs,\n      {\n        id: null,\n        label: 'Off',\n        selected: subs.every((item: Option) => item.selected === false)\n      }\n    ];\n\n    const track: Option = this.tracks.filter((item: Option) => item.selected === true)[0];\n    this.trackSelected = track.id;\n    this.ariaValue = track.label;\n  }\n\n  selectTrack(trackId: string) {\n    this.trackSelected = (trackId === 'null') ? null : trackId;\n\n    this.ariaValue = 'No track selected';\n\n    Array.from((this.API.getMasterMedia().elem as HTMLMediaElement).textTracks)\n      .forEach((item: TextTrack) => {\n        if (item.language === trackId) {\n          this.ariaValue = item.label;\n          item.mode = 'showing';\n        } else {\n          item.mode = 'hidden';\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  OnInit,\n  Input,\n  ViewEncapsulation,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges, Output, EventEmitter\n} from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\nimport { BitrateOption } from '../../core/vg-core.module';\n\n\n// tslint:disable:no-output-on-prefix\n// tslint:disable:component-class-suffix\n// tslint:disable:no-string-literal\n@Component({\n  selector: 'vg-quality-selector',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"container\">\n            <div class=\"quality-selected\"\n                 [class.vg-icon-hd]=\"!bitrateSelected\">\n                {{ bitrateSelected?.label }}\n            </div>\n\n            <select class=\"quality-selector\"\n                    (change)=\"selectBitrate($event.target.value)\"\n                    tabindex=\"0\"\n                    aria-label=\"quality selector\"\n                    [attr.aria-valuetext]=\"ariaValue\">\n                <option\n                    *ngFor=\"let bitrate of bitrates\"\n                    [value]=\"bitrate.qualityIndex.toString()\"\n                    [selected]=\"bitrate.qualityIndex === bitrateSelected?.qualityIndex\">\n                    {{ bitrate.label }}\n                </option>\n            </select>\n        </div>\n    `,\n  styles: [`\n        vg-quality-selector {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            width: 50px;\n            height: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-quality-selector .container {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n\n            padding: 0;\n            margin: 5px;\n        }\n        vg-quality-selector select.quality-selector {\n            width: 50px;\n            padding: 5px 8px;\n            border: none;\n            background: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            color: transparent;\n            font-size: 16px;\n        }\n        vg-quality-selector select.quality-selector::-ms-expand {\n            display: none;\n        }\n        vg-quality-selector select.quality-selector option {\n            color: #000;\n        }\n        vg-quality-selector .quality-selected {\n            position: absolute;\n            width: 100%;\n            height: 50px;\n            top: -6px;\n            text-align: center;\n            text-transform: uppercase;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n            padding-top: 2px;\n            pointer-events: none;\n        }\n        vg-quality-selector .vg-icon-closed_caption:before {\n            width: 100%;\n        }\n    ` ]\n})\nexport class VgQualitySelector implements OnInit, OnChanges, OnDestroy {\n  @Input() bitrates: BitrateOption[];\n\n  @Output() onBitrateChange: EventEmitter<BitrateOption> = new EventEmitter();\n\n  bitrateSelected: BitrateOption;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue: string | number;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['bitrates'].currentValue && changes['bitrates'].currentValue.length) {\n      this.bitrates.forEach(item => item.label = (item.label || Math.round(item.bitrate / 1000)).toString());\n    }\n  }\n\n  selectBitrate(index: number) {\n    this.bitrateSelected = this.bitrates[index];\n    this.onBitrateChange.emit(this.bitrates[index]);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgControls } from './vg-controls';\nimport { VgFullscreen } from './vg-fullscreen/vg-fullscreen';\nimport { VgMute } from './vg-mute/vg-mute';\nimport { VgVolume } from './vg-volume/vg-volume';\nimport { VgPlayPause } from './vg-play-pause/vg-play-pause';\nimport { VgPlaybackButton } from './vg-playback-button/vg-playback-button';\nimport { VgScrubBar } from './vg-scrub-bar/vg-scrub-bar';\nimport { VgScrubBarBufferingTime } from './vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time';\nimport { VgScrubBarCuePoints } from './vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points';\nimport { VgScrubBarCurrentTime } from './vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time';\nimport { VgTimeDisplay, VgUtcPipe } from './vg-time-display/vg-time-display';\nimport { VgTrackSelector } from './vg-track-selector/vg-track-selector';\nimport { VgControlsHidden } from '../core/services/vg-controls-hidden';\nimport { VgQualitySelector } from './vg-quality-selector/vg-quality-selector';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    VgControls,\n    VgFullscreen,\n    VgMute,\n    VgVolume,\n    VgPlayPause,\n    VgPlaybackButton,\n    VgScrubBar,\n    VgScrubBarBufferingTime,\n    VgScrubBarCuePoints,\n    VgScrubBarCurrentTime,\n    VgTimeDisplay,\n    VgUtcPipe,\n    VgTrackSelector,\n    VgQualitySelector\n  ],\n  exports: [\n    VgControls,\n    VgFullscreen,\n    VgMute,\n    VgVolume,\n    VgPlayPause,\n    VgPlaybackButton,\n    VgScrubBar,\n    VgScrubBarBufferingTime,\n    VgScrubBarCuePoints,\n    VgScrubBarCurrentTime,\n    VgTimeDisplay,\n    VgUtcPipe,\n    VgTrackSelector,\n    VgQualitySelector\n  ],\n  providers: [VgControlsHidden]\n})\nexport class VgControlsModule {\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VgEvents {\n  static VG_ABORT = 'abort';\n  static VG_CAN_PLAY = 'canplay';\n  static VG_CAN_PLAY_THROUGH = 'canplaythrough';\n  static VG_DURATION_CHANGE = 'durationchange';\n  static VG_EMPTIED = 'emptied';\n  static VG_ENCRYPTED = 'encrypted';\n  static VG_ENDED = 'ended';\n  static VG_ERROR = 'error';\n  static VG_LOADED_DATA = 'loadeddata';\n  static VG_LOADED_METADATA = 'loadedmetadata';\n  static VG_LOAD_START = 'loadstart';\n  static VG_PAUSE = 'pause';\n  static VG_PLAY = 'play';\n  static VG_PLAYING = 'playing';\n  static VG_PROGRESS = 'progress';\n  static VG_RATE_CHANGE = 'ratechange';\n  static VG_SEEK = 'seek';\n  static VG_SEEKED = 'seeked';\n  static VG_SEEKING = 'seeking';\n  static VG_STALLED = 'stalled';\n  static VG_SUSPEND = 'suspend';\n  static VG_TIME_UPDATE = 'timeupdate';\n  static VG_VOLUME_CHANGE = 'volumechange';\n  static VG_WAITING = 'waiting';\n  static VG_LOAD = 'load';\n  static VG_ENTER = 'enter';\n  static VG_EXIT = 'exit';\n  static VG_START_ADS = 'startads';\n  static VG_END_ADS = 'endads';\n}\n","import { ChangeDetectorRef, OnInit, Directive, Input, OnDestroy } from '@angular/core';\nimport { IPlayable, IMediaSubscriptions } from './i-playable';\nimport { Observable, Subscription, Subject, fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { VgStates } from '../states/vg-states';\nimport { VgAPI } from '../services/vg-api';\nimport { VgEvents } from '../events/vg-events';\nimport { IMediaElement } from './i-media-element';\nimport { timer, combineLatest } from 'rxjs';\n\n@Directive({\n  selector: '[vgMedia]'\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class VgMedia implements OnInit, OnDestroy, IPlayable {\n  elem: any;\n\n  @Input() vgMedia: IMediaElement;\n  @Input() vgMaster: boolean;\n\n  state: string = VgStates.VG_PAUSED;\n\n  time: any = { current: 0, total: 0, left: 0 };\n  buffer: any = { end: 0 };\n  track: any;\n  subscriptions: IMediaSubscriptions | any;\n\n  canPlay = false;\n  canPlayThrough = false;\n  isMetadataLoaded = false;\n  isWaiting = false;\n  isCompleted = false;\n  isLive = false;\n\n  isBufferDetected = false;\n\n  checkInterval = 200;\n  currentPlayPos = 0;\n  lastPlayPos = 0;\n\n  checkBufferSubscription: any;\n  syncSubscription: Subscription;\n  canPlayAllSubscription: any;\n  playAtferSync = false;\n\n  mutationObs: Subscription;\n  canPlayObs: Subscription;\n  canPlayThroughObs: Subscription;\n  loadedMetadataObs: Subscription;\n  waitingObs: Subscription;\n  progressObs: Subscription;\n  endedObs: Subscription;\n  playingObs: Subscription;\n  playObs: Subscription;\n  pauseObs: Subscription;\n  timeUpdateObs: Subscription;\n  volumeChangeObs: Subscription;\n  errorObs: Subscription;\n\n  bufferDetected: Subject<boolean> = new Subject();\n\n  playPromise: Promise<any>;\n\n  constructor(private api: VgAPI, private ref: ChangeDetectorRef) {\n\n  }\n\n  ngOnInit() {\n    if (this.vgMedia.nodeName) {\n      // It's a native element\n      this.elem = this.vgMedia;\n    } else {\n      // It's an Angular Class\n      this.elem = this.vgMedia.elem;\n    }\n\n    // Just in case we're creating this vgMedia dynamically register again into API\n    this.api.registerMedia(this);\n\n    this.subscriptions = {\n      // Native events\n      abort: fromEvent(this.elem as any, VgEvents.VG_ABORT),\n      canPlay: fromEvent(this.elem as any, VgEvents.VG_CAN_PLAY),\n      canPlayThrough: fromEvent(this.elem, VgEvents.VG_CAN_PLAY_THROUGH),\n      durationChange: fromEvent(this.elem as any, VgEvents.VG_DURATION_CHANGE),\n      emptied: fromEvent(this.elem as any, VgEvents.VG_EMPTIED),\n      encrypted: fromEvent(this.elem as any, VgEvents.VG_ENCRYPTED),\n      ended: fromEvent(this.elem as any, VgEvents.VG_ENDED),\n      error: fromEvent(this.elem as any, VgEvents.VG_ERROR),\n      loadedData: fromEvent(this.elem as any, VgEvents.VG_LOADED_DATA),\n      loadedMetadata: fromEvent(this.elem as any, VgEvents.VG_LOADED_METADATA),\n      loadStart: fromEvent(this.elem as any, VgEvents.VG_LOAD_START),\n      pause: fromEvent(this.elem as any, VgEvents.VG_PAUSE),\n      play: fromEvent(this.elem as any, VgEvents.VG_PLAY),\n      playing: fromEvent(this.elem as any, VgEvents.VG_PLAYING),\n      progress: fromEvent(this.elem as any, VgEvents.VG_PROGRESS),\n      rateChange: fromEvent(this.elem as any, VgEvents.VG_RATE_CHANGE),\n      seeked: fromEvent(this.elem as any, VgEvents.VG_SEEKED),\n      seeking: fromEvent(this.elem as any, VgEvents.VG_SEEKING),\n      stalled: fromEvent(this.elem as any, VgEvents.VG_STALLED),\n      suspend: fromEvent(this.elem as any, VgEvents.VG_SUSPEND),\n      timeUpdate: fromEvent(this.elem as any, VgEvents.VG_TIME_UPDATE),\n      volumeChange: fromEvent(this.elem as any, VgEvents.VG_VOLUME_CHANGE),\n      waiting: fromEvent(this.elem as any, VgEvents.VG_WAITING),\n\n      // Advertisement only events\n      startAds: fromEvent(this.elem as any, VgEvents.VG_START_ADS),\n      endAds: fromEvent(this.elem as any, VgEvents.VG_END_ADS),\n\n      // See changes on <source> child elements to reload the video file\n      mutation: new Observable(\n        (observer: any) => {\n\n          const domObs = new MutationObserver((mutations) => {\n            observer.next(mutations);\n          });\n\n          domObs.observe(this.elem as any, { childList: true, attributes: true });\n\n          return () => {\n            domObs.disconnect();\n          };\n        }\n      ),\n\n      // Custom buffering detection\n      bufferDetected: this.bufferDetected\n    };\n\n    this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\n    this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\n    this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\n    this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\n    this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\n    this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\n    this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\n    this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\n    this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n    this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n    this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\n    this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\n    this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n\n    if (this.vgMaster) {\n      this.api.playerReadyEvent.subscribe(\n        () => {\n          this.prepareSync();\n        }\n      );\n    }\n  }\n\n  prepareSync() {\n    const canPlayAll: Array<Observable<any>> = [];\n\n    for (const media in this.api.medias) {\n      if (this.api.medias[media]) {\n        canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n      }\n    }\n\n    this.canPlayAllSubscription = combineLatest(canPlayAll).pipe(\n      map((...params) => {\n        const checkReadyState = (event) => {\n          return event.target.readyState === 4;\n        };\n        const allReady: boolean = params.some(checkReadyState);\n\n        if (allReady && !this.syncSubscription) {\n          this.startSync();\n          this.syncSubscription.unsubscribe();\n        }\n      }\n      )).subscribe();\n  }\n\n  startSync() {\n    this.syncSubscription = timer(0, 1000).subscribe(\n      () => {\n        for (const media in this.api.medias) {\n          if (this.api.medias[media] !== this) {\n            const diff: number = this.api.medias[media].currentTime - this.currentTime;\n\n            if (diff < -0.3 || diff > 0.3) {\n              this.playAtferSync = (this.state === VgStates.VG_PLAYING);\n\n              this.pause();\n              this.api.medias[media].pause();\n              this.api.medias[media].currentTime = this.currentTime;\n            }  else {\n              if (this.playAtferSync) {\n                this.play();\n                this.api.medias[media].play();\n                this.playAtferSync = false;\n              }\n            }\n          }\n        }\n      }\n    );\n  }\n\n  onMutation(mutations: Array<MutationRecord>) {\n    // Detect changes only for source elements or src attribute\n    for (let i = 0, l = mutations.length; i < l; i++) {\n      const mut: MutationRecord = mutations[i];\n\n      if (mut.type === 'attributes' && mut.attributeName === 'src') {\n        // Only load src file if it's not a blob (for DASH / HLS sources)\n        // tslint:disable-next-line:no-string-literal\n        if (mut.target['src'] && mut.target['src'].length > 0 && mut.target['src'].indexOf('blob:') < 0) {\n          this.loadMedia();\n          break;\n        }\n      } else if (mut.type === 'childList' && mut.removedNodes.length && mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\n        this.loadMedia();\n        break;\n      }\n    }\n  }\n\n  loadMedia() {\n    this.vgMedia.pause();\n    this.vgMedia.currentTime = 0;\n\n    // Start buffering until we can play the media file\n    this.stopBufferCheck();\n    this.isBufferDetected = true;\n    this.bufferDetected.next(this.isBufferDetected);\n\n    // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n    setTimeout(() => this.vgMedia.load(), 10);\n  }\n\n  play() {\n    // short-circuit if already playing\n    if (this.playPromise || (this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED)) {\n      return;\n    }\n\n    this.playPromise = this.vgMedia.play();\n\n    // browser has async play promise\n    if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n      this.playPromise\n        .then(() => {\n          this.playPromise = null;\n        })\n        .catch(() => {\n          this.playPromise = null;\n          // deliberately empty for the sake of eating console noise\n        });\n    }\n\n    return this.playPromise;\n  }\n\n  pause() {\n    // browser has async play promise\n    if (this.playPromise) {\n      this.playPromise\n        .then(() => {\n          this.vgMedia.pause();\n        });\n    }  else {\n      this.vgMedia.pause();\n    }\n  }\n\n  get id() {\n    // We should return undefined if vgMedia still doesn't exist\n    // tslint:disable-next-line:no-unnecessary-initializer\n    let result = undefined;\n\n    if (this.vgMedia) {\n      result = this.vgMedia.id;\n    }\n\n    return result;\n  }\n\n  get duration() {\n    return this.vgMedia.duration;\n  }\n\n  set currentTime(seconds) {\n    this.vgMedia.currentTime = seconds;\n    // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n  }\n\n  get currentTime() {\n    return this.vgMedia.currentTime;\n  }\n\n  set volume(volume) {\n    this.vgMedia.volume = volume;\n  }\n\n  get volume() {\n    return this.vgMedia.volume;\n  }\n\n  set playbackRate(rate) {\n    this.vgMedia.playbackRate = rate;\n  }\n\n  get playbackRate() {\n    return this.vgMedia.playbackRate;\n  }\n\n  get buffered() {\n    return this.vgMedia.buffered;\n  }\n\n  get textTracks() {\n    return this.vgMedia.textTracks;\n  }\n  // @ts-ignore\n  onCanPlay(event: any) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlay = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onCanPlayThrough(event: any) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlayThrough = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onLoadMetadata(event: any) {\n    this.isMetadataLoaded = true;\n\n    this.time = {\n      current: 0,\n      left: 0,\n      total: this.duration * 1000\n    };\n\n    this.state = VgStates.VG_PAUSED;\n\n    // Live streaming check\n    const t: number = Math.round(this.time.total);\n    this.isLive = (t === Infinity);\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onWait(event: any) {\n    this.isWaiting = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onComplete(event: any) {\n    this.isCompleted = true;\n    this.state = VgStates.VG_ENDED;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onStartPlaying(event: any) {\n    this.state = VgStates.VG_PLAYING;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onPlay(event: any) {\n    this.state = VgStates.VG_PLAYING;\n\n    if (this.vgMaster) {\n      if (!this.syncSubscription || this.syncSubscription.closed) {\n        this.startSync();\n      }\n    }\n\n    this.startBufferCheck();\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onPause(event: any) {\n    this.state = VgStates.VG_PAUSED;\n\n    if (this.vgMaster) {\n      if (!this.playAtferSync) {\n        this.syncSubscription.unsubscribe();\n      }\n    }\n\n    this.stopBufferCheck();\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onTimeUpdate(event: any) {\n    const end = this.buffered.length - 1;\n\n    this.time = {\n      current: this.currentTime * 1000,\n      total: this.time.total,\n      left: (this.duration - this.currentTime) * 1000\n    };\n\n    if (end >= 0) {\n      this.buffer = { end: this.buffered.end(end) * 1000 };\n    }\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onProgress(event: any) {\n    const end = this.buffered.length - 1;\n\n    if (end >= 0) {\n      this.buffer = { end: this.buffered.end(end) * 1000 };\n    }\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onVolumeChange(event: any) {\n    // TODO: Save to localstorage the current volume\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onError(event: any) {\n    // TODO: Handle error messages\n    this.ref.detectChanges();\n  }\n\n  // http://stackoverflow.com/a/23828241/779529\n  bufferCheck() {\n    const offset = 1 / this.checkInterval;\n    this.currentPlayPos = this.currentTime;\n\n    if (!this.isBufferDetected && this.currentPlayPos < (this.lastPlayPos + offset)) {\n      this.isBufferDetected = true;\n    }\n\n    if (this.isBufferDetected && this.currentPlayPos > (this.lastPlayPos + offset)) {\n      this.isBufferDetected = false;\n    }\n\n    // Prevent calls to bufferCheck after ngOnDestroy have been called\n    if (!this.bufferDetected.closed) {\n      this.bufferDetected.next(this.isBufferDetected);\n    }\n\n    this.lastPlayPos = this.currentPlayPos;\n  }\n\n  startBufferCheck() {\n    this.checkBufferSubscription = timer(0, this.checkInterval).subscribe(\n      () => {\n        this.bufferCheck();\n      }\n    );\n  }\n\n  stopBufferCheck() {\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n\n    this.isBufferDetected = false;\n\n    this.bufferDetected.next(this.isBufferDetected);\n  }\n\n  seekTime(value: number, byPercent: boolean = false) {\n    let second: number;\n    const duration: number = this.duration;\n\n    if (byPercent) {\n      second = value * duration / 100;\n    }  else {\n      second = value;\n    }\n\n    this.currentTime = second;\n  }\n\n  addTextTrack(type: string, label?: string, language?: string, mode?: 'disabled' | 'hidden' | 'showing'): TextTrack {\n    const newTrack: TextTrack = this.vgMedia.addTextTrack(type, label, language);\n\n    if (mode) {\n      newTrack.mode = mode;\n    }\n    return newTrack;\n  }\n\n  ngOnDestroy() {\n    this.vgMedia.src = '';\n    this.mutationObs.unsubscribe();\n    this.canPlayObs.unsubscribe();\n    this.canPlayThroughObs.unsubscribe();\n    this.loadedMetadataObs.unsubscribe();\n    this.waitingObs.unsubscribe();\n    this.progressObs.unsubscribe();\n    this.endedObs.unsubscribe();\n    this.playingObs.unsubscribe();\n    this.playObs.unsubscribe();\n    this.pauseObs.unsubscribe();\n    this.timeUpdateObs.unsubscribe();\n    this.volumeChangeObs.unsubscribe();\n    this.errorObs.unsubscribe();\n\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n\n    if (this.syncSubscription) {\n      this.syncSubscription.unsubscribe();\n    }\n\n    this.bufferDetected.complete();\n    this.bufferDetected.unsubscribe();\n\n    this.api.unregisterMedia(this);\n  }\n}\n","import { Directive, ElementRef, EventEmitter, OnDestroy, OnInit, Output, DoCheck } from '@angular/core';\nimport { VgEvents } from '../events/vg-events';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n@Directive({\n  selector: '[vgCuePoints]'\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class VgCuePoints implements OnInit, OnDestroy, DoCheck {\n  // tslint:disable:no-output-on-prefix\n  @Output() onEnterCuePoint: EventEmitter<any> = new EventEmitter();\n  @Output() onUpdateCuePoint: EventEmitter<any> = new EventEmitter();\n  @Output() onExitCuePoint: EventEmitter<any> = new EventEmitter();\n  @Output() onCompleteCuePoint: EventEmitter<any> = new EventEmitter();\n\n  subscriptions: Subscription[] = [];\n  cuesSubscriptions: Subscription[] = [];\n\n  onLoad$: Observable<any>;\n  onEnter$: Observable<any>;\n  onExit$: Observable<any>;\n\n  totalCues = 0;\n\n  constructor(public ref: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n    this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n  }\n\n  onLoad(event: any) {\n    if (event.target && event.target.track) {\n      const cues: TextTrackCue[] = event.target.track.cues;\n\n      this.ref.nativeElement.cues = cues;\n\n      this.updateCuePoints(cues);\n    } else if (event.target && event.target.textTracks && event.target.textTracks.length) {\n        const cues: TextTrackCue[] = event.target.textTracks[0].cues;\n        this.ref.nativeElement.cues = cues;\n        this.updateCuePoints(cues);\n    }\n  }\n\n  updateCuePoints(cues: TextTrackCue[]) {\n    this.cuesSubscriptions.forEach(s => s.unsubscribe());\n\n    for (let i = 0, l = cues.length; i < l; i++) {\n      this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n      this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n\n      this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n      this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n    }\n  }\n\n  onEnter(event: any) {\n    this.onEnterCuePoint.emit(event.target);\n  }\n\n  onExit(event: any) {\n    this.onExitCuePoint.emit(event.target);\n  }\n\n  ngDoCheck() {\n\n    if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n      const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n\n      if (changes) {\n        this.totalCues = this.ref.nativeElement.track.cues.length;\n        this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n        this.updateCuePoints(this.ref.nativeElement.track.cues);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import {\n  Output,\n  Component,\n  EventEmitter,\n  ElementRef,\n  HostBinding,\n  QueryList,\n  AfterContentInit,\n  ContentChildren, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport { VgAPI } from '../services/vg-api';\nimport { VgFullscreenAPI } from '../services/vg-fullscreen-api';\nimport { VgUtils } from '../services/vg-utils';\nimport { VgMedia } from '../vg-media/vg-media';\nimport { Subscription } from 'rxjs';\nimport { VgControlsHidden } from '../services/vg-controls-hidden';\n\n@Component({\n  selector: 'vg-player',\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content>`,\n  styles: [`\n        vg-player {\n            font-family: 'videogular';\n            position: relative;\n            display: flex;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n            background-color: black;\n        }\n        vg-player.fullscreen {\n            position: fixed;\n            left: 0;\n            top: 0;\n        }\n        vg-player.native-fullscreen.controls-hidden {\n            cursor: none;\n        }\n    ` ],\n  providers: [VgAPI, VgFullscreenAPI, VgControlsHidden]\n})\n// tslint:disable:component-class-suffix\n // tslint:disable:no-output-on-prefix\nexport class VgPlayer implements AfterContentInit, OnDestroy {\n  elem: HTMLElement;\n\n  @HostBinding('class.fullscreen') isFullscreen = false;\n  @HostBinding('class.native-fullscreen') isNativeFullscreen = false;\n  @HostBinding('class.controls-hidden') areControlsHidden = false;\n  @HostBinding('style.z-index') zIndex: string;\n\n\n  @Output()\n  onPlayerReady: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  onMediaReady: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(VgMedia)\n  medias: QueryList<VgMedia>;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public api: VgAPI, public fsAPI: VgFullscreenAPI, private controlsHidden: VgControlsHidden) {\n    this.elem = ref.nativeElement;\n\n    this.api.registerElement(this.elem);\n  }\n\n  ngAfterContentInit() {\n    this.medias.toArray().forEach((media) => {\n      this.api.registerMedia(media);\n    });\n\n    this.fsAPI.init(this.elem, this.medias);\n\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n\n    this.api.onPlayerReady(this.fsAPI);\n    this.onPlayerReady.emit(this.api);\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n      this.zIndex = fsState ? VgUtils.getZIndex().toString() : 'auto';\n    } else {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n\n  onHideControls(hidden: boolean) {\n    this.areControlsHidden = hidden;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { IMediaElement } from './i-media-element';\n\nexport class VgMediaElement implements IMediaElement {\n  id: string;\n  elem: any;\n  get audioTracks(): AudioTrackList { return null; }\n  autoplay: boolean;\n  buffered: TimeRanges;\n  controls: boolean;\n  crossOrigin: string | any;\n  currentSrc: string;\n  currentTime: number;\n  defaultMuted: boolean;\n  defaultPlaybackRate: number;\n  duration: number;\n  ended: boolean;\n  error: MediaError;\n  loop: boolean;\n  mediaKeys: MediaKeys | any;\n  msAudioCategory: string;\n  msAudioDeviceType: string;\n  msGraphicsTrustStatus: MSGraphicsTrust;\n  msKeys: MSMediaKeys;\n  msPlayToDisabled: boolean;\n  msPlayToPreferredSourceUri: string;\n  msPlayToPrimary: boolean;\n  msPlayToSource: any;\n  msRealTime: boolean;\n  muted: boolean;\n  networkState: number;\n  onencrypted: (ev: MediaEncryptedEvent) => any;\n  onmsneedkey: (ev: MSMediaKeyNeededEvent) => any;\n  paused: boolean;\n  playbackRate: number;\n  played: TimeRanges;\n  preload: string;\n  readyState: number;\n  seekable: TimeRanges;\n  seeking: boolean;\n  src: string;\n  srcObject: MediaStream | any;\n  textTracks: TextTrackList;\n  videoTracks: VideoTrackList;\n  volume: number;\n  HAVE_CURRENT_DATA: number;\n  HAVE_ENOUGH_DATA: number;\n  HAVE_FUTURE_DATA: number;\n  HAVE_METADATA: number;\n  HAVE_NOTHING: number;\n  NETWORK_EMPTY: number;\n  NETWORK_IDLE: number;\n  NETWORK_LOADING: number;\n  NETWORK_NO_SOURCE: number;\n  // @ts-ignore\n  addTextTrack(kind: string, label?: string, language?: string): TextTrack {\n    return null;\n  }\n  // @ts-ignore\n  canPlayType(type: string): string {\n    return null;\n  }\n\n  load(): void {\n  }\n\n  msClearEffects(): void {\n  }\n\n  msGetAsCastingSource(): any {\n    return null;\n  }\n  // @ts-ignore\n  msInsertAudioEffect(activatableClassId: string, effectRequired: boolean, config?: any): void {\n  }\n  // @ts-ignore\n  msSetMediaKeys(mediaKeys: MSMediaKeys): void {\n  }\n  // @ts-ignore\n  msSetMediaProtectionManager(mediaProtectionManager?: any): void {\n  }\n\n  pause(): void {\n  }\n\n  play(): Promise<any> {\n    return null;\n  }\n  // @ts-ignore\n  setMediaKeys(mediaKeys: MediaKeys | any): Promise<void> {\n    return null;\n  }\n  // @ts-ignore\n  addEventListener(type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean): void {\n  }\n}\n","import { VgMediaElement } from './vg-media/vg-media-element';\nimport { NgModule } from '@angular/core';\nimport { VgControlsHidden } from './services/vg-controls-hidden';\nimport { VgFullscreenAPI } from './services/vg-fullscreen-api';\nimport { VgUtils } from './services/vg-utils';\nimport { VgAPI } from './services/vg-api';\nimport { VgMedia } from './vg-media/vg-media';\nimport { VgCuePoints } from './vg-cue-points/vg-cue-points';\nimport { VgPlayer } from './vg-player/vg-player';\nimport { VgStates } from './states/vg-states';\nimport { VgEvents } from './events/vg-events';\n\n\nexport * from './vg-media/i-media-element';\nexport * from './vg-media/i-playable';\nexport * from './vg-media/vg-media-element';\nexport * from './services/vg-api';\nexport * from './services/vg-fullscreen-api';\nexport * from './services/vg-utils';\nexport * from './services/vg-controls-hidden';\nexport * from './events/vg-events';\nexport * from './states/vg-states';\n\n\n\nexport interface BitrateOption {\n  qualityIndex: number;\n  width: number;\n  height: number;\n  bitrate: number;\n  mediaType: string;\n  label?: string;\n}\n\n\n\n@NgModule({\n  declarations: [VgMedia, VgCuePoints, VgPlayer],\n  exports: [VgMedia, VgCuePoints, VgPlayer],\n  providers: [VgAPI, VgFullscreenAPI, VgUtils, VgControlsHidden, VgStates, VgEvents]\n})\nexport class VgCoreModule { }\n","// tslint:disable-next-line:no-reference\n///<reference path='./google.ima.ts'/>\nimport { Component, ElementRef, Input, HostBinding, ViewEncapsulation, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { IPlayable } from '../core/vg-media/i-playable';\nimport { VgAPI } from '../core/services/vg-api';\nimport { VgEvents } from '../core/events/vg-events';\nimport { VgFullscreenAPI } from '../core/services/vg-fullscreen-api';\nimport { Subscription } from 'rxjs';\n\n\n // tslint:disable:no-output-on-prefix\n// tslint:disable:ban-types\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-ima-ads',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vg-ima-ads\"></div>`,\n  styles: [`\n        vg-ima-ads {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            z-index: 300;\n        }\n        vg-ima-ads .vg-ima-ads {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            pointer-events: none;\n        }\n    ` ]\n})\n\nexport class VgImaAds implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgNetwork: string;\n  @Input() vgUnitPath: string;\n  @Input() vgCompanion: string;\n\n  @Input() vgCompanionSize: Array<Number>;\n  @Input() vgAdTagUrl: string;\n  @Input() vgSkipButton: string;\n\n\n  @Output() onAdStart: EventEmitter<boolean> = new EventEmitter();\n  @Output() onAdStop: EventEmitter<boolean> = new EventEmitter();\n  @Output() onSkipAd: EventEmitter<boolean> = new EventEmitter();\n\n  elem: HTMLElement;\n  target: IPlayable;\n  ima: Ima;\n  isFullscreen = false;\n  skipButton: HTMLElement;\n\n  subscriptions: Subscription[] = [];\n\n  @HostBinding('style.display') displayState = 'none';\n\n  constructor(ref: ElementRef, public API: VgAPI, public fsAPI: VgFullscreenAPI) {\n    this.elem = ref.nativeElement;\n    this.onContentEnded = this.onContentEnded.bind(this);\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    if (typeof google === 'undefined') {\n      this.onMissingGoogleImaLoader();\n      return;\n    }\n\n    this.target = this.API.getMediaById(this.vgFor);\n\n    this.initializations();\n\n    this.subscriptions.push(this.target.subscriptions.ended.subscribe(this.onContentEnded.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onUpdateState.bind(this)));\n\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n\n    this.ima.adsLoader.addEventListener(\n      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n      this.onAdsManagerLoaded.bind(this),\n      false\n    );\n    this.ima.adsLoader.addEventListener(\n      google.ima.AdErrorEvent.Type.AD_ERROR,\n      this.onAdError.bind(this),\n      false\n    );\n\n    this.loadAds();\n  }\n\n  initializations() {\n    this.ima = new Ima(this.elem);\n\n    if (this.vgSkipButton) {\n      this.skipButton = document.querySelector(this.vgSkipButton) as HTMLElement;\n      this.skipButton.style.display = 'none';\n      this.skipButton.addEventListener('click', this.onClickSkip.bind(this));\n      this.elem.insertBefore(this.skipButton, this.elem.firstChild);\n    }\n\n    window.addEventListener('resize', () => {\n      const w = this.API.videogularElement.offsetWidth;\n      const h = this.API.videogularElement.offsetHeight;\n\n      if (this.ima.adsManager) {\n        if (this.isFullscreen) {\n          this.ima.adsManager.resize(w, h, google.ima.ViewMode.FULLSCREEN);\n        } else {\n          this.ima.adsManager.resize(w, h, google.ima.ViewMode.NORMAL);\n        }\n      }\n    });\n  }\n\n  loadAds() {\n    if (this.vgCompanion) {\n      googletag.cmd.push(\n        () => {\n          const adUnitPath: string = '/' + this.vgNetwork + '/' + this.vgUnitPath;\n          const slot: googletag.Slot = googletag.defineSlot(adUnitPath, this.vgCompanionSize, this.vgCompanion);\n\n          if (slot) {\n            slot.addService(googletag.companionAds());\n            slot.addService(googletag.pubads());\n\n            googletag\n              .companionAds()\n              .setRefreshUnfilledSlots(true);\n\n            googletag\n              .pubads()\n              .enableVideoAds();\n\n            googletag.enableServices();\n          }\n        }\n      );\n    }\n  }\n\n  onUpdateState(event: any) {\n    switch (event.type) {\n      case VgEvents.VG_PLAY:\n        if (!this.ima.adsLoaded) {\n          this.API.pause();\n          this.ima.adDisplayContainer.initialize();\n          this.requestAds(this.vgAdTagUrl);\n          this.ima.adsLoaded = true;\n        }\n        break;\n    }\n  }\n\n  requestAds(adTagUrl: string) {\n    // Show only to get computed style in pixels\n    this.show();\n\n    const adsRequest = new google.ima.AdsRequest();\n    const computedStyle = window.getComputedStyle(this.elem);\n    adsRequest.adTagUrl = adTagUrl;\n\n    adsRequest.linearAdSlotWidth = parseInt(computedStyle.width, 10);\n    adsRequest.linearAdSlotHeight = parseInt(computedStyle.height, 10);\n    adsRequest.nonLinearAdSlotWidth = parseInt(computedStyle.width, 10);\n    adsRequest.nonLinearAdSlotHeight = parseInt(computedStyle.height, 10);\n\n    this.ima.adsLoader.requestAds(adsRequest);\n  }\n\n  onAdsManagerLoaded(evt: google.ima.AdsManagerLoadedEvent) {\n    this.show();\n    this.ima.adsManager = evt.getAdsManager(this.target);\n    this.processAdsManager(this.ima.adsManager);\n  }\n  // @ts-ignore\n  processAdsManager(adsManager: google.ima.AdsManager) {\n    const w = this.API.videogularElement.offsetWidth;\n    const h = this.API.videogularElement.offsetHeight;\n\n    // Attach the pause/resume events.\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n      this.onContentPauseRequested.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n      this.onContentResumeRequested.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED,\n      this.onSkippableStateChanged.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n      this.onAllAdsComplete.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.COMPLETE,\n      this.onAdComplete.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdErrorEvent.Type.AD_ERROR,\n      this.onAdError.bind(this),\n      false\n    );\n\n    this.ima.adsManager.init(w, h, google.ima.ViewMode.NORMAL);\n    this.ima.adsManager.start();\n  }\n\n  onSkippableStateChanged() {\n    const isSkippable = this.ima.adsManager.getAdSkippableState();\n\n    if (isSkippable) {\n      this.skipButton.style.display = 'block';\n    } else {\n      this.skipButton.style.display = 'none';\n    }\n  }\n\n  onClickSkip() {\n    this.ima.adsManager.skip();\n    this.onSkipAd.emit(true);\n  }\n\n  onContentPauseRequested() {\n    this.show();\n    this.API.pause();\n    this.onAdStop.emit(true);\n  }\n\n  onContentResumeRequested() {\n    this.API.play();\n    this.onAdStart.emit(true);\n    this.hide();\n  }\n  // @ts-ignore\n  onAdError(evt) {\n    if (this.ima.adsManager) {\n      this.ima.adsManager.destroy();\n    }\n    this.hide();\n    this.API.play();\n    this.onAdStop.emit(true);\n  }\n\n  onAllAdsComplete() {\n    this.hide();\n    // The last ad was a post-roll\n    if (this.ima.adsManager.getCuePoints().join().indexOf('-1') >= 0) {\n      this.API.pause(); // it was stop() in Videogular v1\n      this.onAdStop.emit(true);\n    }\n  }\n\n  onAdComplete() {\n    // TODO: Update view with current ad count\n    this.ima.currentAd++;\n    this.onAdStop.emit(true);\n  }\n\n  show() {\n    window.dispatchEvent(new CustomEvent(VgEvents.VG_START_ADS));\n    this.displayState = 'block';\n  }\n\n  hide() {\n    window.dispatchEvent(new CustomEvent(VgEvents.VG_END_ADS));\n    this.displayState = 'none';\n  }\n\n  onContentEnded() {\n    this.ima.adsLoader.contentComplete();\n    this.onAdStop.emit(true);\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n    }\n  }\n\n  private onMissingGoogleImaLoader() {\n    this.hide();\n    this.API.play();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n\n\nexport class Ima {\n  adDisplayContainer: google.ima.AdDisplayContainer;\n  adsLoader: google.ima.AdsLoader;\n  adsManager: google.ima.AdsManager;\n  adsLoaded: boolean;\n  currentAd: number;\n\n  constructor(imaAdsElement: HTMLElement) {\n    this.adDisplayContainer = new google.ima.AdDisplayContainer(imaAdsElement);\n    this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\n\n    this.adsManager = null;\n    this.adsLoaded = false;\n    this.currentAd = 0;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VgImaAds } from './vg-ima-ads';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    VgImaAds\n  ],\n  exports: [\n    VgImaAds\n  ]\n})\nexport class VgImaAdsModule { }\n","import {\n  Component, OnInit, Input, ElementRef, HostListener, ViewEncapsulation, OnDestroy,\n  HostBinding\n} from '@angular/core';\nimport { VgAPI } from '../core/services/vg-api';\nimport { VgStates } from '../core/states/vg-states';\nimport { Subscription } from 'rxjs';\nimport { VgFullscreenAPI } from '../core/services/vg-fullscreen-api';\nimport { VgControlsHidden } from '../core/services/vg-controls-hidden';\n\n@Component({\n  selector: 'vg-overlay-play',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vg-overlay-play\"\n                    [class.native-fullscreen]=\"isNativeFullscreen\"\n                    [class.controls-hidden]=\"areControlsHidden\">\n                   <div class=\"overlay-play-container\"\n                        [class.vg-icon-play_arrow]=\"getState() !== 'playing'\">\n                   </div>\n               </div>`,\n  styles: [`\n        vg-overlay-play {\n            z-index: 200;\n        }\n        vg-overlay-play.is-buffering {\n            display: none;\n        }\n        vg-overlay-play .vg-overlay-play {\n            transition: all 0.5s;\n            cursor: pointer;\n            position: absolute;\n            display: block;\n            color: white;\n            width: 100%;\n            height: 100%;\n            font-size: 80px;\n            filter: alpha(opacity=60);\n            opacity: 0.6;\n        }\n        vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden {\n            cursor: none;\n        }\n        vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow {\n            pointer-events: none;\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 80px;\n        }\n        vg-overlay-play .vg-overlay-play:hover {\n            filter: alpha(opacity=100);\n            opacity: 1;\n        }\n        vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before {\n            transform: scale(1.2);\n        }\n    ` ]\n})\n// tslint:disable:component-class-suffix\nexport class VgOverlayPlay implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  elem: HTMLElement;\n  target: any;\n\n  isNativeFullscreen = false;\n  areControlsHidden = false;\n\n  subscriptions: Subscription[] = [];\n\n  @HostBinding('class.is-buffering') isBuffering = false;\n\n  constructor(ref: ElementRef, public API: VgAPI, public fsAPI: VgFullscreenAPI, private controlsHidden: VgControlsHidden) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n    this.subscriptions.push(\n      this.target.subscriptions.bufferDetected.subscribe(\n        isBuffering => this.onUpdateBuffer(isBuffering)\n      )\n    );\n  }\n\n  onUpdateBuffer(isBuffering) {\n    this.isBuffering = isBuffering;\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    if (this.fsAPI.nativeFullscreen) {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n\n  onHideControls(hidden: boolean) {\n    this.areControlsHidden = hidden;\n  }\n\n  @HostListener('click')\n  onClick() {\n    const state = this.getState();\n\n    switch (state) {\n      case VgStates.VG_PLAYING:\n        this.target.pause();\n        break;\n\n      case VgStates.VG_PAUSED:\n      case VgStates.VG_ENDED:\n        this.target.play();\n        break;\n    }\n  }\n\n  getState() {\n    let state = VgStates.VG_PAUSED;\n\n    if (this.target) {\n      if (this.target.state instanceof Array) {\n        for (let i = 0, l = this.target.state.length; i < l; i++) {\n          if (this.target.state[i] === VgStates.VG_PLAYING) {\n            state = VgStates.VG_PLAYING;\n            break;\n          }\n        }\n      } else {\n        state = this.target.state;\n      }\n    }\n\n    return state;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VgOverlayPlay } from './vg-overlay-play';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    VgOverlayPlay\n  ],\n  exports: [\n    VgOverlayPlay\n  ]\n})\nexport class VgOverlayPlayModule { }\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\nimport { IDRMLicenseServer } from '../vg-streaming.module';\nimport { BitrateOption } from '../../core/vg-core.module';\n\ndeclare let dashjs;\n\n@Directive({\n  selector: '[vgDash]',\n  exportAs: 'vgDash'\n})\n// tslint:disable:directive-class-suffix\n // tslint:disable:no-output-on-prefix\n // tslint:disable:no-string-literal\nexport class VgDASH implements OnInit, OnChanges, OnDestroy {\n  @Input() vgDash: string;\n  @Input() vgDRMToken: string;\n  @Input() vgDRMLicenseServer: IDRMLicenseServer;\n\n\n  @Output() onGetBitrates: EventEmitter<BitrateOption[]> = new EventEmitter();\n\n  vgFor: string;\n  target: any;\n  dash: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private ref: ElementRef, public API: VgAPI) { }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n    this.target = this.API.getMediaById(this.vgFor);\n    this.createPlayer();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if (changes['vgDash'] && changes['vgDash'].currentValue) {\n      this.createPlayer();\n    } else {\n      this.destroyPlayer();\n    }\n  }\n\n  createPlayer() {\n    if (this.dash) {\n      this.destroyPlayer();\n    }\n\n    // It's a DASH source\n    if (this.vgDash && (\n      (this.vgDash.indexOf('.mpd') > -1) ||\n      (this.vgDash.indexOf('mpd-time-csf') > -1))\n    ) {\n      let drmOptions;\n\n      if (this.vgDRMLicenseServer) {\n        drmOptions = this.vgDRMLicenseServer;\n\n        if (this.vgDRMToken) {\n          for (const drmServer in drmOptions) {\n            if (drmServer.hasOwnProperty(drmServer)) {\n              drmOptions[drmServer].httpRequestHeaders = { Authorization: this.vgDRMToken };\n            }\n          }\n        }\n      }\n\n      this.dash = dashjs.MediaPlayer().create();\n      this.dash.getDebug().setLogToBrowserConsole(false);\n      this.dash.initialize(this.ref.nativeElement);\n      this.dash.setAutoPlay(false);\n\n      this.dash.on(dashjs.MediaPlayer.events.STREAM_INITIALIZED, () => {\n        const audioList = this.dash.getBitrateInfoListFor('audio');\n        const videoList = this.dash.getBitrateInfoListFor('video');\n\n        if (audioList.length > 1) {\n          audioList.forEach(item => item.qualityIndex = ++item.qualityIndex);\n          audioList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            label: 'AUTO'\n          });\n\n          this.onGetBitrates.emit(audioList);\n        }\n\n        if (videoList.length > 1) {\n          videoList.forEach(item => item.qualityIndex = ++item.qualityIndex);\n          videoList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            label: 'AUTO'\n          });\n\n          this.onGetBitrates.emit(videoList);\n        }\n      });\n\n      if (drmOptions) {\n        this.dash.setProtectionData(drmOptions);\n      }\n\n      this.dash.attachSource(this.vgDash);\n    } else {\n      if (this.target) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgDash;\n      }\n    }\n  }\n\n  setBitrate(bitrate: BitrateOption) {\n    if (this.dash) {\n      if (bitrate.qualityIndex > 0) {\n        if (this.dash.getAutoSwitchQualityFor(bitrate.mediaType)) {\n          this.dash.setAutoSwitchQualityFor(bitrate.mediaType, false);\n        }\n\n        const nextIndex = bitrate.qualityIndex - 1;\n        this.dash.setQualityFor(bitrate.mediaType, nextIndex);\n      } else {\n        this.dash.setAutoSwitchQualityFor(bitrate.mediaType, true);\n      }\n    }\n  }\n\n  destroyPlayer() {\n    if (this.dash) {\n      this.dash.reset();\n      this.dash = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.destroyPlayer();\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { IHLSConfig } from './hls-config';\nimport { Subscription } from 'rxjs';\nimport { BitrateOption } from '../../core/vg-core.module';\n\ndeclare let Hls;\n\n@Directive({\n  selector: '[vgHls]',\n  exportAs: 'vgHls'\n})\n// tslint:disable:no-string-literal\n// tslint:disable:directive-class-suffix\n// tslint:disable:no-output-on-prefix\nexport class VgHLS implements OnInit, OnChanges, OnDestroy {\n  @Input() vgHls: string;\n  @Input() vgHlsHeaders: { [key: string]: string } = {};\n  @Output() onGetBitrates: EventEmitter<BitrateOption[]> = new EventEmitter();\n\n  vgFor: string;\n  target: any;\n  hls: any;\n  preload: boolean;\n  crossorigin: string;\n  config: IHLSConfig;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private ref: ElementRef, public API: VgAPI) { }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.crossorigin = this.ref.nativeElement.getAttribute('crossorigin');\n    this.preload = this.ref.nativeElement.getAttribute('preload') !== 'none';\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n\n    if (this.vgFor) {\n      this.target = this.API.getMediaById(this.vgFor);\n    } else {\n      this.target = this.API.getDefaultMedia();\n    }\n\n\n    this.config = {\n      autoStartLoad: this.preload\n    } as IHLSConfig;\n    // @ts-ignore\n    this.config.xhrSetup = (xhr, url) => {\n      // Send cookies\n      if (this.crossorigin === 'use-credentials') {\n        xhr.withCredentials = true;\n      }\n      for (const key of Object.keys(this.vgHlsHeaders)) {\n        xhr.setRequestHeader(key, this.vgHlsHeaders[key]);\n      }\n    };\n\n    this.createPlayer();\n\n    if (!this.preload) {\n      this.subscriptions.push(\n        this.API.subscriptions.play.subscribe(\n          () => {\n            if (this.hls) {\n              this.hls.startLoad(0);\n            }\n          }\n        )\n      );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if (changes['vgHls'] && changes['vgHls'].currentValue) {\n      this.createPlayer();\n    } else if (changes['vgHlsHeaders'] && changes['vgHlsHeaders'].currentValue) {\n      // Do nothing. We don't want to create a or destroy a player if the headers change.\n    } else {\n      this.destroyPlayer();\n    }\n  }\n\n  createPlayer() {\n    if (this.hls) {\n      this.destroyPlayer();\n    }\n\n    // It's a HLS source\n    if (this.vgHls && this.vgHls.indexOf('m3u8') > -1 && Hls.isSupported() && this.API.isPlayerReady) {\n      const video: HTMLVideoElement = this.ref.nativeElement;\n\n      this.hls = new Hls(this.config);\n      // @ts-ignore\n      this.hls.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n        const videoList = [];\n\n        videoList.push({\n          qualityIndex: 0,\n          width: 0,\n          height: 0,\n          bitrate: 0,\n          mediaType: 'video',\n          label: 'AUTO'\n        });\n\n        data.levels.forEach((item, index) => {\n          videoList.push({\n            qualityIndex: ++index,\n            width: item.width,\n            height: item.height,\n            bitrate: item.bitrate,\n            mediaType: 'video',\n            label: item.name\n          });\n        });\n\n        this.onGetBitrates.emit(videoList);\n      }\n      );\n      // @ts-ignore\n      this.hls.on(Hls.Events.LEVEL_LOADED, (event, data) => {\n        this.target.isLive = data.details.live;\n      }\n      );\n\n      this.hls.loadSource(this.vgHls);\n      this.hls.attachMedia(video);\n    } else {\n      if (this.target && !!this.target.pause) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgHls;\n      }\n    }\n  }\n\n  setBitrate(bitrate: BitrateOption) {\n    if (this.hls) {\n      this.hls.nextLevel = bitrate.qualityIndex - 1;\n    }\n  }\n\n  destroyPlayer() {\n    if (this.hls) {\n      this.hls.destroy();\n      this.hls = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.destroyPlayer();\n    delete this.hls;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgDASH } from './vg-dash/vg-dash';\nimport { VgHLS } from './vg-hls/vg-hls';\n\nexport interface IDRMLicenseServer {\n  [index: string]: {\n    serverURL: string;\n  };\n}\n\n\nexport * from './vg-dash/vg-dash';\nexport * from './vg-hls/vg-hls';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    VgDASH, VgHLS\n  ],\n  exports: [\n    VgDASH, VgHLS\n  ]\n})\nexport class VgStreamingModule { }\n"]}