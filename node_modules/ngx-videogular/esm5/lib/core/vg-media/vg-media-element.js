var VgMediaElement = /** @class */ (function () {
    function VgMediaElement() {
    }
    Object.defineProperty(VgMediaElement.prototype, "audioTracks", {
        get: function () { return null; },
        enumerable: true,
        configurable: true
    });
    // @ts-ignore
    VgMediaElement.prototype.addTextTrack = function (kind, label, language) {
        return null;
    };
    // @ts-ignore
    VgMediaElement.prototype.canPlayType = function (type) {
        return null;
    };
    VgMediaElement.prototype.load = function () {
    };
    VgMediaElement.prototype.msClearEffects = function () {
    };
    VgMediaElement.prototype.msGetAsCastingSource = function () {
        return null;
    };
    // @ts-ignore
    VgMediaElement.prototype.msInsertAudioEffect = function (activatableClassId, effectRequired, config) {
    };
    // @ts-ignore
    VgMediaElement.prototype.msSetMediaKeys = function (mediaKeys) {
    };
    // @ts-ignore
    VgMediaElement.prototype.msSetMediaProtectionManager = function (mediaProtectionManager) {
    };
    VgMediaElement.prototype.pause = function () {
    };
    VgMediaElement.prototype.play = function () {
        return null;
    };
    // @ts-ignore
    VgMediaElement.prototype.setMediaKeys = function (mediaKeys) {
        return null;
    };
    // @ts-ignore
    VgMediaElement.prototype.addEventListener = function (type, listener, useCapture) {
    };
    return VgMediaElement;
}());
export { VgMediaElement };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctbWVkaWEtZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC12aWRlb2d1bGFyLyIsInNvdXJjZXMiOlsibGliL2NvcmUvdmctbWVkaWEvdmctbWVkaWEtZWxlbWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtJQUFBO0lBNEZBLENBQUM7SUF6RkMsc0JBQUksdUNBQVc7YUFBZixjQUFvQyxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUM7OztPQUFBO0lBZ0RsRCxhQUFhO0lBQ2IscUNBQVksR0FBWixVQUFhLElBQVksRUFBRSxLQUFjLEVBQUUsUUFBaUI7UUFDMUQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBQ0QsYUFBYTtJQUNiLG9DQUFXLEdBQVgsVUFBWSxJQUFZO1FBQ3RCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELDZCQUFJLEdBQUo7SUFDQSxDQUFDO0lBRUQsdUNBQWMsR0FBZDtJQUNBLENBQUM7SUFFRCw2Q0FBb0IsR0FBcEI7UUFDRSxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFDRCxhQUFhO0lBQ2IsNENBQW1CLEdBQW5CLFVBQW9CLGtCQUEwQixFQUFFLGNBQXVCLEVBQUUsTUFBWTtJQUNyRixDQUFDO0lBQ0QsYUFBYTtJQUNiLHVDQUFjLEdBQWQsVUFBZSxTQUFzQjtJQUNyQyxDQUFDO0lBQ0QsYUFBYTtJQUNiLG9EQUEyQixHQUEzQixVQUE0QixzQkFBNEI7SUFDeEQsQ0FBQztJQUVELDhCQUFLLEdBQUw7SUFDQSxDQUFDO0lBRUQsNkJBQUksR0FBSjtRQUNFLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUNELGFBQWE7SUFDYixxQ0FBWSxHQUFaLFVBQWEsU0FBMEI7UUFDckMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBQ0QsYUFBYTtJQUNiLHlDQUFnQixHQUFoQixVQUFpQixJQUFZLEVBQUUsUUFBNEMsRUFBRSxVQUFvQjtJQUNqRyxDQUFDO0lBQ0gscUJBQUM7QUFBRCxDQUFDLEFBNUZELElBNEZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSU1lZGlhRWxlbWVudCB9IGZyb20gJy4vaS1tZWRpYS1lbGVtZW50JztcblxuZXhwb3J0IGNsYXNzIFZnTWVkaWFFbGVtZW50IGltcGxlbWVudHMgSU1lZGlhRWxlbWVudCB7XG4gIGlkOiBzdHJpbmc7XG4gIGVsZW06IGFueTtcbiAgZ2V0IGF1ZGlvVHJhY2tzKCk6IEF1ZGlvVHJhY2tMaXN0IHsgcmV0dXJuIG51bGw7IH1cbiAgYXV0b3BsYXk6IGJvb2xlYW47XG4gIGJ1ZmZlcmVkOiBUaW1lUmFuZ2VzO1xuICBjb250cm9sczogYm9vbGVhbjtcbiAgY3Jvc3NPcmlnaW46IHN0cmluZyB8IGFueTtcbiAgY3VycmVudFNyYzogc3RyaW5nO1xuICBjdXJyZW50VGltZTogbnVtYmVyO1xuICBkZWZhdWx0TXV0ZWQ6IGJvb2xlYW47XG4gIGRlZmF1bHRQbGF5YmFja1JhdGU6IG51bWJlcjtcbiAgZHVyYXRpb246IG51bWJlcjtcbiAgZW5kZWQ6IGJvb2xlYW47XG4gIGVycm9yOiBNZWRpYUVycm9yO1xuICBsb29wOiBib29sZWFuO1xuICBtZWRpYUtleXM6IE1lZGlhS2V5cyB8IGFueTtcbiAgbXNBdWRpb0NhdGVnb3J5OiBzdHJpbmc7XG4gIG1zQXVkaW9EZXZpY2VUeXBlOiBzdHJpbmc7XG4gIG1zR3JhcGhpY3NUcnVzdFN0YXR1czogTVNHcmFwaGljc1RydXN0O1xuICBtc0tleXM6IE1TTWVkaWFLZXlzO1xuICBtc1BsYXlUb0Rpc2FibGVkOiBib29sZWFuO1xuICBtc1BsYXlUb1ByZWZlcnJlZFNvdXJjZVVyaTogc3RyaW5nO1xuICBtc1BsYXlUb1ByaW1hcnk6IGJvb2xlYW47XG4gIG1zUGxheVRvU291cmNlOiBhbnk7XG4gIG1zUmVhbFRpbWU6IGJvb2xlYW47XG4gIG11dGVkOiBib29sZWFuO1xuICBuZXR3b3JrU3RhdGU6IG51bWJlcjtcbiAgb25lbmNyeXB0ZWQ6IChldjogTWVkaWFFbmNyeXB0ZWRFdmVudCkgPT4gYW55O1xuICBvbm1zbmVlZGtleTogKGV2OiBNU01lZGlhS2V5TmVlZGVkRXZlbnQpID0+IGFueTtcbiAgcGF1c2VkOiBib29sZWFuO1xuICBwbGF5YmFja1JhdGU6IG51bWJlcjtcbiAgcGxheWVkOiBUaW1lUmFuZ2VzO1xuICBwcmVsb2FkOiBzdHJpbmc7XG4gIHJlYWR5U3RhdGU6IG51bWJlcjtcbiAgc2Vla2FibGU6IFRpbWVSYW5nZXM7XG4gIHNlZWtpbmc6IGJvb2xlYW47XG4gIHNyYzogc3RyaW5nO1xuICBzcmNPYmplY3Q6IE1lZGlhU3RyZWFtIHwgYW55O1xuICB0ZXh0VHJhY2tzOiBUZXh0VHJhY2tMaXN0O1xuICB2aWRlb1RyYWNrczogVmlkZW9UcmFja0xpc3Q7XG4gIHZvbHVtZTogbnVtYmVyO1xuICBIQVZFX0NVUlJFTlRfREFUQTogbnVtYmVyO1xuICBIQVZFX0VOT1VHSF9EQVRBOiBudW1iZXI7XG4gIEhBVkVfRlVUVVJFX0RBVEE6IG51bWJlcjtcbiAgSEFWRV9NRVRBREFUQTogbnVtYmVyO1xuICBIQVZFX05PVEhJTkc6IG51bWJlcjtcbiAgTkVUV09SS19FTVBUWTogbnVtYmVyO1xuICBORVRXT1JLX0lETEU6IG51bWJlcjtcbiAgTkVUV09SS19MT0FESU5HOiBudW1iZXI7XG4gIE5FVFdPUktfTk9fU09VUkNFOiBudW1iZXI7XG4gIC8vIEB0cy1pZ25vcmVcbiAgYWRkVGV4dFRyYWNrKGtpbmQ6IHN0cmluZywgbGFiZWw/OiBzdHJpbmcsIGxhbmd1YWdlPzogc3RyaW5nKTogVGV4dFRyYWNrIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICAvLyBAdHMtaWdub3JlXG4gIGNhblBsYXlUeXBlKHR5cGU6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBsb2FkKCk6IHZvaWQge1xuICB9XG5cbiAgbXNDbGVhckVmZmVjdHMoKTogdm9pZCB7XG4gIH1cblxuICBtc0dldEFzQ2FzdGluZ1NvdXJjZSgpOiBhbnkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIC8vIEB0cy1pZ25vcmVcbiAgbXNJbnNlcnRBdWRpb0VmZmVjdChhY3RpdmF0YWJsZUNsYXNzSWQ6IHN0cmluZywgZWZmZWN0UmVxdWlyZWQ6IGJvb2xlYW4sIGNvbmZpZz86IGFueSk6IHZvaWQge1xuICB9XG4gIC8vIEB0cy1pZ25vcmVcbiAgbXNTZXRNZWRpYUtleXMobWVkaWFLZXlzOiBNU01lZGlhS2V5cyk6IHZvaWQge1xuICB9XG4gIC8vIEB0cy1pZ25vcmVcbiAgbXNTZXRNZWRpYVByb3RlY3Rpb25NYW5hZ2VyKG1lZGlhUHJvdGVjdGlvbk1hbmFnZXI/OiBhbnkpOiB2b2lkIHtcbiAgfVxuXG4gIHBhdXNlKCk6IHZvaWQge1xuICB9XG5cbiAgcGxheSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIC8vIEB0cy1pZ25vcmVcbiAgc2V0TWVkaWFLZXlzKG1lZGlhS2V5czogTWVkaWFLZXlzIHwgYW55KTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgLy8gQHRzLWlnbm9yZVxuICBhZGRFdmVudExpc3RlbmVyKHR5cGU6IHN0cmluZywgbGlzdGVuZXI6IEV2ZW50TGlzdGVuZXJPckV2ZW50TGlzdGVuZXJPYmplY3QsIHVzZUNhcHR1cmU/OiBib29sZWFuKTogdm9pZCB7XG4gIH1cbn1cbiJdfQ==