import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { VgControls } from './vg-controls';
import { VgFullscreen } from './vg-fullscreen/vg-fullscreen';
import { VgMute } from './vg-mute/vg-mute';
import { VgVolume } from './vg-volume/vg-volume';
import { VgPlayPause } from './vg-play-pause/vg-play-pause';
import { VgPlaybackButton } from './vg-playback-button/vg-playback-button';
import { VgScrubBar } from './vg-scrub-bar/vg-scrub-bar';
import { VgScrubBarBufferingTime } from './vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time';
import { VgScrubBarCuePoints } from './vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points';
import { VgScrubBarCurrentTime } from './vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time';
import { VgTimeDisplay, VgUtcPipe } from './vg-time-display/vg-time-display';
import { VgTrackSelector } from './vg-track-selector/vg-track-selector';
import { VgControlsHidden } from '../core/services/vg-controls-hidden';
import { VgQualitySelector } from './vg-quality-selector/vg-quality-selector';
let VgControlsModule = class VgControlsModule {
};
VgControlsModule = __decorate([
    NgModule({
        imports: [CommonModule],
        declarations: [
            VgControls,
            VgFullscreen,
            VgMute,
            VgVolume,
            VgPlayPause,
            VgPlaybackButton,
            VgScrubBar,
            VgScrubBarBufferingTime,
            VgScrubBarCuePoints,
            VgScrubBarCurrentTime,
            VgTimeDisplay,
            VgUtcPipe,
            VgTrackSelector,
            VgQualitySelector
        ],
        exports: [
            VgControls,
            VgFullscreen,
            VgMute,
            VgVolume,
            VgPlayPause,
            VgPlaybackButton,
            VgScrubBar,
            VgScrubBarBufferingTime,
            VgScrubBarCuePoints,
            VgScrubBarCurrentTime,
            VgTimeDisplay,
            VgUtcPipe,
            VgTrackSelector,
            VgQualitySelector
        ],
        providers: [VgControlsHidden]
    })
], VgControlsModule);
export { VgControlsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmctY29udHJvbHMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXZpZGVvZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvY29udHJvbHMvdmctY29udHJvbHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUM3RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDM0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDekQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sd0VBQXdFLENBQUM7QUFDakgsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0VBQWdFLENBQUM7QUFDckcsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0VBQW9FLENBQUM7QUFDM0csT0FBTyxFQUFFLGFBQWEsRUFBRSxTQUFTLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDeEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDdkUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFzQzlFLElBQWEsZ0JBQWdCLEdBQTdCLE1BQWEsZ0JBQWdCO0NBQzVCLENBQUE7QUFEWSxnQkFBZ0I7SUFwQzVCLFFBQVEsQ0FBQztRQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztRQUN2QixZQUFZLEVBQUU7WUFDWixVQUFVO1lBQ1YsWUFBWTtZQUNaLE1BQU07WUFDTixRQUFRO1lBQ1IsV0FBVztZQUNYLGdCQUFnQjtZQUNoQixVQUFVO1lBQ1YsdUJBQXVCO1lBQ3ZCLG1CQUFtQjtZQUNuQixxQkFBcUI7WUFDckIsYUFBYTtZQUNiLFNBQVM7WUFDVCxlQUFlO1lBQ2YsaUJBQWlCO1NBQ2xCO1FBQ0QsT0FBTyxFQUFFO1lBQ1AsVUFBVTtZQUNWLFlBQVk7WUFDWixNQUFNO1lBQ04sUUFBUTtZQUNSLFdBQVc7WUFDWCxnQkFBZ0I7WUFDaEIsVUFBVTtZQUNWLHVCQUF1QjtZQUN2QixtQkFBbUI7WUFDbkIscUJBQXFCO1lBQ3JCLGFBQWE7WUFDYixTQUFTO1lBQ1QsZUFBZTtZQUNmLGlCQUFpQjtTQUNsQjtRQUNELFNBQVMsRUFBRSxDQUFDLGdCQUFnQixDQUFDO0tBQzlCLENBQUM7R0FDVyxnQkFBZ0IsQ0FDNUI7U0FEWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFZnQ29udHJvbHMgfSBmcm9tICcuL3ZnLWNvbnRyb2xzJztcbmltcG9ydCB7IFZnRnVsbHNjcmVlbiB9IGZyb20gJy4vdmctZnVsbHNjcmVlbi92Zy1mdWxsc2NyZWVuJztcbmltcG9ydCB7IFZnTXV0ZSB9IGZyb20gJy4vdmctbXV0ZS92Zy1tdXRlJztcbmltcG9ydCB7IFZnVm9sdW1lIH0gZnJvbSAnLi92Zy12b2x1bWUvdmctdm9sdW1lJztcbmltcG9ydCB7IFZnUGxheVBhdXNlIH0gZnJvbSAnLi92Zy1wbGF5LXBhdXNlL3ZnLXBsYXktcGF1c2UnO1xuaW1wb3J0IHsgVmdQbGF5YmFja0J1dHRvbiB9IGZyb20gJy4vdmctcGxheWJhY2stYnV0dG9uL3ZnLXBsYXliYWNrLWJ1dHRvbic7XG5pbXBvcnQgeyBWZ1NjcnViQmFyIH0gZnJvbSAnLi92Zy1zY3J1Yi1iYXIvdmctc2NydWItYmFyJztcbmltcG9ydCB7IFZnU2NydWJCYXJCdWZmZXJpbmdUaW1lIH0gZnJvbSAnLi92Zy1zY3J1Yi1iYXIvdmctc2NydWItYmFyLWJ1ZmZlcmluZy10aW1lL3ZnLXNjcnViLWJhci1idWZmZXJpbmctdGltZSc7XG5pbXBvcnQgeyBWZ1NjcnViQmFyQ3VlUG9pbnRzIH0gZnJvbSAnLi92Zy1zY3J1Yi1iYXIvdmctc2NydWItYmFyLWN1ZS1wb2ludHMvdmctc2NydWItYmFyLWN1ZS1wb2ludHMnO1xuaW1wb3J0IHsgVmdTY3J1YkJhckN1cnJlbnRUaW1lIH0gZnJvbSAnLi92Zy1zY3J1Yi1iYXIvdmctc2NydWItYmFyLWN1cnJlbnQtdGltZS92Zy1zY3J1Yi1iYXItY3VycmVudC10aW1lJztcbmltcG9ydCB7IFZnVGltZURpc3BsYXksIFZnVXRjUGlwZSB9IGZyb20gJy4vdmctdGltZS1kaXNwbGF5L3ZnLXRpbWUtZGlzcGxheSc7XG5pbXBvcnQgeyBWZ1RyYWNrU2VsZWN0b3IgfSBmcm9tICcuL3ZnLXRyYWNrLXNlbGVjdG9yL3ZnLXRyYWNrLXNlbGVjdG9yJztcbmltcG9ydCB7IFZnQ29udHJvbHNIaWRkZW4gfSBmcm9tICcuLi9jb3JlL3NlcnZpY2VzL3ZnLWNvbnRyb2xzLWhpZGRlbic7XG5pbXBvcnQgeyBWZ1F1YWxpdHlTZWxlY3RvciB9IGZyb20gJy4vdmctcXVhbGl0eS1zZWxlY3Rvci92Zy1xdWFsaXR5LXNlbGVjdG9yJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFZnQ29udHJvbHMsXG4gICAgVmdGdWxsc2NyZWVuLFxuICAgIFZnTXV0ZSxcbiAgICBWZ1ZvbHVtZSxcbiAgICBWZ1BsYXlQYXVzZSxcbiAgICBWZ1BsYXliYWNrQnV0dG9uLFxuICAgIFZnU2NydWJCYXIsXG4gICAgVmdTY3J1YkJhckJ1ZmZlcmluZ1RpbWUsXG4gICAgVmdTY3J1YkJhckN1ZVBvaW50cyxcbiAgICBWZ1NjcnViQmFyQ3VycmVudFRpbWUsXG4gICAgVmdUaW1lRGlzcGxheSxcbiAgICBWZ1V0Y1BpcGUsXG4gICAgVmdUcmFja1NlbGVjdG9yLFxuICAgIFZnUXVhbGl0eVNlbGVjdG9yXG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBWZ0NvbnRyb2xzLFxuICAgIFZnRnVsbHNjcmVlbixcbiAgICBWZ011dGUsXG4gICAgVmdWb2x1bWUsXG4gICAgVmdQbGF5UGF1c2UsXG4gICAgVmdQbGF5YmFja0J1dHRvbixcbiAgICBWZ1NjcnViQmFyLFxuICAgIFZnU2NydWJCYXJCdWZmZXJpbmdUaW1lLFxuICAgIFZnU2NydWJCYXJDdWVQb2ludHMsXG4gICAgVmdTY3J1YkJhckN1cnJlbnRUaW1lLFxuICAgIFZnVGltZURpc3BsYXksXG4gICAgVmdVdGNQaXBlLFxuICAgIFZnVHJhY2tTZWxlY3RvcixcbiAgICBWZ1F1YWxpdHlTZWxlY3RvclxuICBdLFxuICBwcm92aWRlcnM6IFtWZ0NvbnRyb2xzSGlkZGVuXVxufSlcbmV4cG9ydCBjbGFzcyBWZ0NvbnRyb2xzTW9kdWxlIHtcbn1cbiJdfQ==