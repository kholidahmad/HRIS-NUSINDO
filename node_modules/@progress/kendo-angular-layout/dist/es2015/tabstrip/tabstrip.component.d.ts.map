{"version":3,"file":"tabstrip.component.d.ts","sources":["D:/project/projek_angular/hris_rni/node_modules/@progress/kendo-angular-layout/dist/es2015/tabstrip/tabstrip.component.d.ts"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ElementRef, EventEmitter, QueryList, Renderer2, OnInit, OnDestroy } from '@angular/core';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { TabStripTabComponent } from './tabstrip-tab.component';\nimport { SelectEvent } from './tabstrip-events';\nimport { TabPosition } from './tab-position';\nimport { TabAlignment } from './tab-alignment';\n/**\n * Represents the [Kendo UI TabStrip component for Angular]({% slug overview_tabstrip %}).\n */\nexport declare class TabStripComponent implements OnInit, OnDestroy {\n    private localization;\n    private renderer;\n    private wrapper;\n    /**\n     * Sets the height of the TabStrip.\n     */\n    height: string | null | undefined;\n    /**\n     * Enables the tab animation.\n     */\n    animate: boolean;\n    /**\n     * Sets the alignment of the tabs.\n     */\n    tabAlignment: TabAlignment;\n    /**\n     * Sets the position of the tabs. Defaults to `top`.\n     */\n    tabPosition: TabPosition;\n    /**\n     * When set to `true`, the component renders all tabs and they are persisted in the DOM.\n     * By default, `keepTabContent` is `false`.\n     */\n    keepTabContent: boolean;\n    /**\n     * @hidden\n     */\n    tablist: ElementRef;\n    /**\n     * Fires each time the user selects a tab ([see example]({% slug overview_tabstrip %}#toc-basic-usage)).\n     * The event data contains the index of the selected tab and its title.\n     */\n    tabSelect: EventEmitter<SelectEvent>;\n    hostClasses: boolean;\n    readonly tabsAtTop: boolean;\n    readonly tabsAtRight: boolean;\n    readonly tabsAtBottom: boolean;\n    readonly tabsAtLeft: boolean;\n    readonly dir: string;\n    /**\n     * @hidden\n     */\n    tabs: QueryList<TabStripTabComponent>;\n    tabHeadingContainers: QueryList<ElementRef<HTMLLIElement>>;\n    /**\n     * @hidden\n     */\n    _animate: boolean;\n    private localizationChangeSubscription;\n    private keyBindings;\n    private _height;\n    constructor(localization: LocalizationService, renderer: Renderer2, wrapper: ElementRef);\n    /**\n     * @hidden\n     */\n    contentClass(active: boolean): string;\n    readonly computedKeys: Object;\n    /**\n     * @hidden\n     */\n    readonly tabsAlignment: string;\n    /**\n     * @hidden\n     */\n    invertKeys(original: any, inverted: any): any;\n    /**\n     * @hidden\n     */\n    onKeyDown(event: any): void;\n    /**\n     * @hidden\n     */\n    tabPanelId(id: number): string;\n    /**\n     * @hidden\n     */\n    tabId(id: number): string;\n    /**\n     * Allows the user to select a tab programmatically.\n     * @param {number} index - The index of the tab that will be selected.\n     */\n    selectTab(index: number): void;\n    /**\n     * @hidden\n     */\n    onTabClick(originalEvent: MouseEvent, tabIndex: number): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    private firstNavigatableIndex;\n    private lastNavigatableIndex;\n    private prevNavigatableIndex;\n    private nextNavigatableIndex;\n    private emitEvent;\n    private deactivateAll;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;"}