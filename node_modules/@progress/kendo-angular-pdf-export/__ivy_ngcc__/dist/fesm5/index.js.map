{"version":3,"file":"index.js","sources":["D:/project/projek_angular/hris_rni/node_modules/@progress/kendo-angular-pdf-export/dist/fesm5/index.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { Directive, TemplateRef, Optional, Component, Input, ElementRef, ContentChild, NgModule } from '@angular/core';\nimport { drawDOM, exportPDF } from '@progress/kendo-drawing';\nimport { saveAs } from '@progress/kendo-file-saver';\n\nvar PDFTemplateDirective = /** @class */ (function () {\n    function PDFTemplateDirective(templateRef) {\n        this.templateRef = templateRef;\n    }\n    PDFTemplateDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[kendoPDFTemplate]'\n                },] },\n    ];\n    /** @nocollapse */\n    PDFTemplateDirective.ctorParameters = function () { return [\n        { type: TemplateRef, decorators: [{ type: Optional }] }\n    ]; };\n    return PDFTemplateDirective;\n}());\n\nvar FIELDS = ['bottom', 'left', 'right', 'top'];\n/**\n * Represents the Kendo UI PDFMargin component for Angular.\n */\nvar PDFMarginComponent = /** @class */ (function () {\n    function PDFMarginComponent() {\n    }\n    Object.defineProperty(PDFMarginComponent.prototype, \"options\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            var options = {};\n            for (var idx = 0; idx < FIELDS.length; idx++) {\n                var field = FIELDS[idx];\n                var value = this[field];\n                if (typeof value !== 'undefined') {\n                    options[field] = value;\n                }\n            }\n            return options;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PDFMarginComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'kendo-pdf-export-margin',\n                    template: \"\"\n                },] },\n    ];\n    PDFMarginComponent.propDecorators = {\n        left: [{ type: Input }],\n        top: [{ type: Input }],\n        right: [{ type: Input }],\n        bottom: [{ type: Input }]\n    };\n    return PDFMarginComponent;\n}());\n\n/**\n * @hidden\n */\nvar compileTemplate = function (templateRef) {\n    var context = {};\n    var embeddedView = templateRef.createEmbeddedView(context);\n    var result = function (data) {\n        Object.assign(context, data);\n        embeddedView.detectChanges();\n        var templateWrap = document.createElement('span');\n        embeddedView.rootNodes.forEach(function (rootNode) {\n            templateWrap.appendChild(rootNode.cloneNode(true));\n        });\n        return templateWrap;\n    };\n    result.destroy = function () {\n        embeddedView.destroy();\n        embeddedView = null;\n    };\n    return result;\n};\n\n/**\n * Represents the [Kendo UI PDF Export component for Angular]({% slug overview_pdfexport %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *     <div class=\"example-config\">\n *       <button kendo-button (click)=\"pdf.saveAs('document.pdf')\">\n *         Save As PDF...\n *       </button>\n *     </div>\n *\n *     <kendo-pdf-export #pdf paperSize=\"A4\" margin=\"2cm\">\n *       Content goes here\n *     </kendo-pdf-export>\n *   `\n * })\n * export class AppComponent {\n * }\n * ```\n */\nvar PDFExportComponent = /** @class */ (function () {\n    function PDFExportComponent(element) {\n        this.element = element;\n        /**\n         * The creator of the PDF document.\n         * @default \"Kendo UI PDF Generator\"\n         */\n        this.creator = 'Kendo UI PDF Generator';\n        /**\n         * Specifies the name of the exported PDF file.\n         * @default \"Export.pdf\"\n         */\n        this.fileName = 'export.pdf';\n    }\n    Object.defineProperty(PDFExportComponent.prototype, \"drawMargin\", {\n        get: function () {\n            var marginComponent = this.marginComponent;\n            var margin = this.margin;\n            if (marginComponent) {\n                margin = Object.assign(margin || {}, marginComponent.options);\n            }\n            return margin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Saves the content as a PDF file with the specified name.\n     * @param fileName - The name of the exported file.\n     */\n    PDFExportComponent.prototype.saveAs = function (fileName) {\n        if (fileName === void 0) { fileName = this.fileName; }\n        this.save(this.element.nativeElement, fileName);\n    };\n    /**\n     * Exports the content as a `Group` for further processing.\n     *\n     * @return - The root group of the exported scene.\n     */\n    PDFExportComponent.prototype.export = function () {\n        return this.exportElement(this.element.nativeElement);\n    };\n    PDFExportComponent.prototype.save = function (element, fileName) {\n        var _this = this;\n        this.exportElement(element)\n            .then(function (group) { return _this.exportGroup(group, _this.pdfOptions()); })\n            .then(function (dataUri) { return _this.saveDataUri(dataUri, fileName, _this.saveOptions()); });\n    };\n    PDFExportComponent.prototype.exportElement = function (element) {\n        var promise = this.drawElement(element, this.drawOptions());\n        var cleanup = this.cleanup.bind(this);\n        promise.then(cleanup, cleanup);\n        return promise;\n    };\n    PDFExportComponent.prototype.cleanup = function () {\n        if (this.pageTemplate) {\n            this.pageTemplate.destroy();\n            delete this.pageTemplate;\n        }\n    };\n    PDFExportComponent.prototype.drawOptions = function () {\n        if (this.pageTemplateDirective) {\n            this.pageTemplate = compileTemplate(this.pageTemplateDirective.templateRef);\n        }\n        return {\n            avoidLinks: this.avoidLinks,\n            forcePageBreak: this.forcePageBreak,\n            keepTogether: this.keepTogether,\n            margin: this.drawMargin,\n            paperSize: this.paperSize,\n            landscape: this.landscape,\n            repeatHeaders: this.repeatHeaders,\n            scale: this.scale,\n            template: this.pageTemplate\n        };\n    };\n    PDFExportComponent.prototype.pdfOptions = function () {\n        return {\n            author: this.author,\n            creator: this.creator,\n            date: this.date,\n            imgDPI: this.imageResolution,\n            keywords: this.keywords,\n            landscape: this.landscape,\n            margin: this.drawMargin,\n            multiPage: true,\n            paperSize: this.paperSize,\n            producer: this.producer,\n            subject: this.subject,\n            title: this.title\n        };\n    };\n    PDFExportComponent.prototype.saveOptions = function () {\n        return {\n            forceProxy: this.forceProxy,\n            proxyData: this.proxyData,\n            proxyTarget: this.proxyTarget,\n            proxyURL: this.proxyURL\n        };\n    };\n    PDFExportComponent.prototype.drawElement = function (element, options) {\n        return drawDOM(element, options);\n    };\n    PDFExportComponent.prototype.exportGroup = function (group, options) {\n        return exportPDF(group, options);\n    };\n    PDFExportComponent.prototype.saveDataUri = function (dataUri, fileName, options) {\n        saveAs(dataUri, fileName, options);\n    };\n    PDFExportComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'kendo-pdf-export',\n                    template: \"<div><ng-content></ng-content></div>\"\n                },] },\n    ];\n    /** @nocollapse */\n    PDFExportComponent.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    PDFExportComponent.propDecorators = {\n        author: [{ type: Input }],\n        avoidLinks: [{ type: Input }],\n        forcePageBreak: [{ type: Input }],\n        keepTogether: [{ type: Input }],\n        creator: [{ type: Input }],\n        date: [{ type: Input }],\n        imageResolution: [{ type: Input }],\n        fileName: [{ type: Input }],\n        forceProxy: [{ type: Input }],\n        keywords: [{ type: Input }],\n        landscape: [{ type: Input }],\n        margin: [{ type: Input }],\n        paperSize: [{ type: Input }],\n        repeatHeaders: [{ type: Input }],\n        scale: [{ type: Input }],\n        proxyData: [{ type: Input }],\n        proxyURL: [{ type: Input }],\n        proxyTarget: [{ type: Input }],\n        producer: [{ type: Input }],\n        subject: [{ type: Input }],\n        title: [{ type: Input }],\n        pageTemplateDirective: [{ type: ContentChild, args: [PDFTemplateDirective,] }],\n        marginComponent: [{ type: ContentChild, args: [PDFMarginComponent,] }]\n    };\n    return PDFExportComponent;\n}());\n\nvar COMPONENT_DIRECTIVES = [\n    PDFExportComponent,\n    PDFMarginComponent,\n    PDFTemplateDirective\n];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }}) definition for the PDF Export directive.\n */\nvar PDFExportModule = /** @class */ (function () {\n    function PDFExportModule() {\n    }\n    PDFExportModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [COMPONENT_DIRECTIVES],\n                    exports: [COMPONENT_DIRECTIVES]\n                },] },\n    ];\n    return PDFExportModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PDFExportComponent, PDFExportModule, PDFMarginComponent, PDFTemplateDirective, compileTemplate };\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAQA;;;KAGK,AAKC;;;;;;;;;;;;;;kCAIG;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA4BF,AAMD;;;;;;;;;;;;;;;;;;;;;;;oBAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA6JA,AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBA6BA;;;;;;;;;;;;;;KAcD;;;;;;;;;;;;;;gDAMC;;;;;;;;;"}