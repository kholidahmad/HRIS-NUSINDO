{"version":3,"file":"index.js","sources":["D:/project/projek_angular/hris_rni/node_modules/@progress/kendo-angular-common/dist/fesm5/index.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { Directive, ElementRef, NgZone, Input, Output, EventEmitter, NgModule, Renderer2, Injectable, Component } from '@angular/core';\nimport Draggable from '@telerik/kendo-draggable';\nimport { CommonModule } from '@angular/common';\nimport { auditTime } from 'rxjs/operators';\nimport { __extends } from 'tslib';\nimport { merge, fromEvent, from } from 'rxjs';\n\nvar isDocumentAvailable = function () { return typeof document !== 'undefined'; };\n\nvar isChanged = function (propertyName, changes, skipFirstChange) {\n    if (skipFirstChange === void 0) { skipFirstChange = true; }\n    return (typeof changes[propertyName] !== 'undefined' &&\n        (!changes[propertyName].isFirstChange() || !skipFirstChange) &&\n        changes[propertyName].previousValue !== changes[propertyName].currentValue);\n};\n\nvar anyChanged = function (propertyNames, changes, skipFirstChange) {\n    if (skipFirstChange === void 0) { skipFirstChange = true; }\n    return propertyNames.some(function (name) { return isChanged(name, changes, skipFirstChange); });\n};\n\nvar hasObservers = function (emitter) { return emitter && emitter.observers.length > 0; };\n\nvar guid = function () {\n    var id = \"\";\n    for (var i = 0; i < 32; i++) {\n        var random = Math.random() * 16 | 0; // tslint:disable-line:no-bitwise\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            id += \"-\";\n        }\n        // tslint:disable-next-line:no-bitwise\n        id += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return id;\n};\n\nvar DraggableDirective = /** @class */ (function () {\n    function DraggableDirective(element, ngZone) {\n        this.element = element;\n        this.ngZone = ngZone;\n        this.enableDrag = true;\n        this.kendoPress = new EventEmitter();\n        this.kendoDrag = new EventEmitter();\n        this.kendoRelease = new EventEmitter();\n    }\n    DraggableDirective.prototype.ngOnInit = function () {\n        this.toggleDraggable();\n    };\n    DraggableDirective.prototype.ngOnChanges = function (changes) {\n        if (isChanged('enableDrag', changes)) {\n            this.toggleDraggable();\n        }\n    };\n    DraggableDirective.prototype.ngOnDestroy = function () {\n        this.destroyDraggable();\n    };\n    DraggableDirective.prototype.toggleDraggable = function () {\n        var _this = this;\n        if (isDocumentAvailable()) {\n            this.destroyDraggable();\n            if (this.enableDrag) {\n                this.draggable = new Draggable({\n                    drag: function (e) { return _this.kendoDrag.next(e); },\n                    press: function (e) { return _this.kendoPress.next(e); },\n                    release: function (e) { return _this.kendoRelease.next(e); }\n                });\n                this.ngZone.runOutsideAngular(function () { return _this.draggable.bindTo(_this.element.nativeElement); });\n            }\n        }\n    };\n    DraggableDirective.prototype.destroyDraggable = function () {\n        if (this.draggable) {\n            this.draggable.destroy();\n            this.draggable = null;\n        }\n    };\n    DraggableDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[kendoDraggable]'\n                },] },\n    ];\n    /** @nocollapse */\n    DraggableDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone }\n    ]; };\n    DraggableDirective.propDecorators = {\n        enableDrag: [{ type: Input }],\n        kendoPress: [{ type: Output }],\n        kendoDrag: [{ type: Output }],\n        kendoRelease: [{ type: Output }]\n    };\n    return DraggableDirective;\n}());\n\n/**\n * @hidden\n */\nvar DraggableModule = /** @class */ (function () {\n    function DraggableModule() {\n    }\n    DraggableModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [DraggableDirective],\n                    exports: [DraggableDirective],\n                    imports: [CommonModule]\n                },] },\n    ];\n    return DraggableModule;\n}());\n\n/* tslint:disable:no-input-rename */\n/**\n * @hidden\n */\nvar EventsOutsideAngularDirective = /** @class */ (function () {\n    function EventsOutsideAngularDirective(element, ngZone, renderer) {\n        this.element = element;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.events = {};\n    }\n    EventsOutsideAngularDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (!this.element || !this.element.nativeElement) {\n            return;\n        }\n        var events = this.events;\n        this.subscriptions = [];\n        this.ngZone.runOutsideAngular(function () {\n            for (var name_1 in events) {\n                if (events.hasOwnProperty(name_1)) {\n                    _this.subscriptions.push(_this.renderer.listen(_this.element.nativeElement, name_1, _this.scope ? events[name_1].bind(_this.scope) : events[name_1]));\n                }\n            }\n        });\n    };\n    EventsOutsideAngularDirective.prototype.ngOnDestroy = function () {\n        if (this.subscriptions) {\n            for (var idx = 0; idx < this.subscriptions.length; idx++) {\n                this.subscriptions[idx]();\n            }\n            this.subscriptions = null;\n        }\n    };\n    EventsOutsideAngularDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[kendoEventsOutsideAngular]'\n                },] },\n    ];\n    /** @nocollapse */\n    EventsOutsideAngularDirective.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: NgZone },\n        { type: Renderer2 }\n    ]; };\n    EventsOutsideAngularDirective.propDecorators = {\n        events: [{ type: Input, args: ['kendoEventsOutsideAngular',] }],\n        scope: [{ type: Input }]\n    };\n    return EventsOutsideAngularDirective;\n}());\n\n/**\n * @hidden\n */\nvar EventsModule = /** @class */ (function () {\n    function EventsModule() {\n    }\n    EventsModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [EventsOutsideAngularDirective],\n                    exports: [EventsOutsideAngularDirective]\n                },] },\n    ];\n    return EventsModule;\n}());\n\nvar ResizeService = /** @class */ (function () {\n    function ResizeService(resizeBatchService) {\n        this.resizeBatchService = resizeBatchService;\n        this.resize = new EventEmitter();\n        this.acceptedSize = false;\n        this.state = 0 /* Initial */;\n    }\n    ResizeService.prototype.acceptSize = function (size) {\n        if (size === void 0) { size = this.measure(); }\n        this.lastWidth = size.width;\n        this.lastHeight = size.height;\n        this.acceptedSize = true;\n    };\n    ResizeService.prototype.checkChanges = function () {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        if (this.state === 0 /* Initial */) {\n            this.state = 1 /* Initializing */;\n            // batch initial measure\n            this.resizeBatchService.schedule(this, this.init);\n        }\n    };\n    ResizeService.prototype.destroy = function () {\n        this.resizeBatchService.cancel(this);\n    };\n    ResizeService.prototype.checkSize = function () {\n        if (!this.parentElement) {\n            return;\n        }\n        var _a = this.measure(), width = _a.width, height = _a.height;\n        var sameSize = width === this.lastWidth && height === this.lastHeight;\n        if (sameSize) {\n            return;\n        }\n        this.lastWidth = width;\n        this.lastHeight = height;\n        this.acceptedSize = false;\n        this.resize.emit();\n        return true;\n    };\n    ResizeService.prototype.initSize = function () {\n        var size = this.measure();\n        this.lastWidth = size.width;\n        this.lastHeight = size.height;\n    };\n    ResizeService.prototype.measure = function () {\n        var width = 0;\n        var height = 0;\n        if (this.parentElement) {\n            height = this.parentElement.offsetHeight;\n            width = this.parentElement.offsetWidth;\n        }\n        return { height: height, width: width };\n    };\n    return ResizeService;\n}());\n\n// tslint:disable:deprecation\nvar div = function (style) {\n    var el = document.createElement('div');\n    el.style.cssText = style;\n    return el;\n};\nvar computedProp = function (elem, prop) {\n    return getComputedStyle(elem, null).getPropertyValue(prop);\n};\nvar WRAP_STYLE = 'position: absolute; display: block; left: 0; top: 0; right: 0; bottom: 0; z-index: -1;' +\n    'overflow: hidden; visibility: hidden;';\nvar EXPAND_CHILD_STYLE = 'position: absolute; left: 0; top: 0; transition: 0s;';\nvar SHRINK_CHILD_STYLE = EXPAND_CHILD_STYLE + 'width: 200%; height: 200%;';\nvar ResizeCompatService = /** @class */ (function (_super) {\n    __extends(ResizeCompatService, _super);\n    function ResizeCompatService(resizeBatchService, element, ngZone) {\n        var _this = _super.call(this, resizeBatchService) || this;\n        _this.element = element;\n        _this.ngZone = ngZone;\n        return _this;\n    }\n    ResizeCompatService.prototype.checkChanges = function () {\n        if (this.state === 2 /* Initialized */) {\n            if (!this.resizeBatchService.isScheduled(this)) {\n                this.resizeBatchService.schedule(this, this.checkSize);\n            }\n            return;\n        }\n        _super.prototype.checkChanges.call(this);\n    };\n    ResizeCompatService.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        if (this.expand) {\n            var element = this.element.nativeElement;\n            element.removeChild(this.expand);\n            element.removeChild(this.shrink);\n            this.expand.removeChild(this.expandChild);\n            this.expand = this.expandChild = this.shrink = this.element = null;\n        }\n    };\n    ResizeCompatService.prototype.checkSize = function () {\n        if (_super.prototype.checkSize.call(this)) {\n            this.reset();\n            return true;\n        }\n    };\n    ResizeCompatService.prototype.init = function () {\n        var parentElement = this.parentElement = this.element.nativeElement.parentElement;\n        if (computedProp(parentElement, 'position') === 'static') {\n            parentElement.style.position = 'relative';\n        }\n        this.state = 2 /* Initialized */;\n        this.render();\n        this.reset();\n        this.initSize();\n        this.subscribe();\n    };\n    ResizeCompatService.prototype.render = function () {\n        var element = this.element.nativeElement;\n        element.style.cssText = WRAP_STYLE;\n        element.setAttribute('dir', 'ltr');\n        this.expand = div(WRAP_STYLE);\n        this.expandChild = div(EXPAND_CHILD_STYLE);\n        this.expand.appendChild(this.expandChild);\n        element.appendChild(this.expand);\n        this.shrink = div(WRAP_STYLE);\n        var shrinkChild = div(SHRINK_CHILD_STYLE);\n        this.shrink.appendChild(shrinkChild);\n        element.appendChild(this.shrink);\n    };\n    ResizeCompatService.prototype.reset = function () {\n        var expandChild = this.expandChild;\n        expandChild.style.width = 100000 + 'px';\n        expandChild.style.height = 100000 + 'px';\n        var expand = this.expand;\n        expand.scrollLeft = 100000;\n        expand.scrollTop = 100000;\n        var shrink = this.shrink;\n        shrink.scrollLeft = 100000;\n        shrink.scrollTop = 100000;\n    };\n    ResizeCompatService.prototype.subscribe = function () {\n        var _this = this;\n        this.ngZone.runOutsideAngular(function () {\n            _this.subscription = merge(fromEvent(_this.shrink, 'scroll'), fromEvent(_this.expand, 'scroll'))\n                .subscribe(function () {\n                _this.checkSize();\n            });\n        });\n    };\n    return ResizeCompatService;\n}(ResizeService));\n\nvar HAS_OBSERVER = typeof ResizeObserver !== 'undefined';\n/**\n * @hidden\n */\nvar ResizeObserverService = /** @class */ (function (_super) {\n    __extends(ResizeObserverService, _super);\n    function ResizeObserverService(resizeBatchService, element, ngZone) {\n        var _this = _super.call(this, resizeBatchService) || this;\n        _this.element = element;\n        _this.ngZone = ngZone;\n        return _this;\n    }\n    ResizeObserverService.supported = function () {\n        return HAS_OBSERVER;\n    };\n    ResizeObserverService.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n            this.resizeObserver = null;\n        }\n        this.parentElement = null;\n    };\n    ResizeObserverService.prototype.init = function () {\n        var _this = this;\n        this.parentElement = this.element.nativeElement.parentElement;\n        this.initSize();\n        this.state = 2 /* Initialized */;\n        this.ngZone.runOutsideAngular(function () {\n            _this.resizeObserver = new ResizeObserver(function () {\n                _this.checkSize();\n            });\n            _this.resizeObserver.observe(_this.parentElement);\n        });\n    };\n    return ResizeObserverService;\n}(ResizeService));\n\n/* tslint:disable:align */\n/**\n * @hidden\n */\nvar ResizeBatchService = /** @class */ (function () {\n    function ResizeBatchService(ngZone) {\n        this.ngZone = ngZone;\n        this.scheduled = [];\n        this.resolvedPromise = Promise.resolve(null);\n        this.flush = this.flush.bind(this);\n    }\n    ResizeBatchService.prototype.schedule = function (instance, method) {\n        var _this = this;\n        this.scheduled.push({ instance: instance, method: method });\n        if (!this.subscription) {\n            this.ngZone.runOutsideAngular(function () {\n                _this.subscription = from(_this.resolvedPromise)\n                    .subscribe(_this.flush);\n            });\n        }\n    };\n    ResizeBatchService.prototype.isScheduled = function (instance) {\n        return Boolean(this.scheduled.find(function (item) { return item.instance === instance; }));\n    };\n    ResizeBatchService.prototype.cancel = function (instance) {\n        var scheduled = this.scheduled;\n        var count = scheduled.length;\n        for (var idx = 0; idx < count; idx++) {\n            if (scheduled[idx].instance === instance) {\n                scheduled.splice(idx, 1);\n                if (!scheduled.length) {\n                    this.unsubscribe();\n                }\n                return;\n            }\n        }\n    };\n    ResizeBatchService.prototype.ngOnDestroy = function () {\n        this.unsubscribe();\n    };\n    ResizeBatchService.prototype.unsubscribe = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    };\n    ResizeBatchService.prototype.flush = function () {\n        this.scheduled.forEach(function (item) {\n            item.method.call(item.instance);\n        });\n        this.scheduled = [];\n        this.unsubscribe();\n    };\n    ResizeBatchService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ResizeBatchService.ctorParameters = function () { return [\n        { type: NgZone }\n    ]; };\n    return ResizeBatchService;\n}());\n\n/**\n * Emit up to 10 resize events per second by default.\n * Chosen as a compromise between responsiveness and performance.\n */\nvar DEFAULT_RATE_LIMIT = 10;\n/**\n * Resize Sensor Component\n *\n * Triggers a \"resize\" event whenever the parent DOM element size changes.\n */\nvar ResizeSensorComponent = /** @class */ (function () {\n    function ResizeSensorComponent(resizeBatchService, element, ngZone) {\n        var _this = this;\n        /**\n         * The maximum number of resize events to emit per second.\n         *\n         * Defaults to 10.\n         */\n        this.rateLimit = DEFAULT_RATE_LIMIT;\n        /**\n         * Fires when the parent DOM element has been resized.\n         */\n        this.resize = new EventEmitter();\n        var serviceType = ResizeObserverService.supported() ? ResizeObserverService : ResizeCompatService;\n        this.resizeService = new serviceType(resizeBatchService, element, ngZone);\n        var throttleTime = 1000 / (this.rateLimit || DEFAULT_RATE_LIMIT);\n        this.subscription = this.resizeService.resize\n            .pipe(auditTime(throttleTime))\n            .subscribe(function () {\n            if (!_this.resizeService.acceptedSize) {\n                _this.resize.emit();\n            }\n        });\n    }\n    ResizeSensorComponent.prototype.ngAfterViewChecked = function () {\n        this.resizeService.checkChanges();\n    };\n    ResizeSensorComponent.prototype.ngOnDestroy = function () {\n        this.subscription.unsubscribe();\n        this.resizeService.destroy();\n    };\n    ResizeSensorComponent.prototype.acceptSize = function (size) {\n        this.resizeService.acceptSize(size);\n    };\n    ResizeSensorComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'kendo-resize-sensor',\n                    template: ''\n                },] },\n    ];\n    /** @nocollapse */\n    ResizeSensorComponent.ctorParameters = function () { return [\n        { type: ResizeBatchService },\n        { type: ElementRef },\n        { type: NgZone }\n    ]; };\n    ResizeSensorComponent.propDecorators = {\n        rateLimit: [{ type: Input }],\n        resize: [{ type: Output }]\n    };\n    return ResizeSensorComponent;\n}());\n\nvar COMPONENT_DIRECTIVES = [ResizeSensorComponent];\n/**\n * Resize Sensor module\n */\nvar ResizeSensorModule = /** @class */ (function () {\n    function ResizeSensorModule() {\n    }\n    ResizeSensorModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [COMPONENT_DIRECTIVES],\n                    exports: [COMPONENT_DIRECTIVES],\n                    providers: [ResizeBatchService]\n                },] },\n    ];\n    return ResizeSensorModule;\n}());\n\nvar KendoInput = /** @class */ (function () {\n    function KendoInput() {\n    }\n    return KendoInput;\n}());\n\n/**\n * Enum with key codes.\n */\nvar Keys;\n(function (Keys) {\n    Keys[Keys[\"Alt\"] = 18] = \"Alt\";\n    Keys[Keys[\"ArrowDown\"] = 40] = \"ArrowDown\";\n    Keys[Keys[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Keys[Keys[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Keys[Keys[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Keys[Keys[\"Backspace\"] = 8] = \"Backspace\";\n    Keys[Keys[\"Control\"] = 17] = \"Control\";\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    Keys[Keys[\"Digit0\"] = 48] = \"Digit0\";\n    Keys[Keys[\"Digit1\"] = 49] = \"Digit1\";\n    Keys[Keys[\"Digit2\"] = 50] = \"Digit2\";\n    Keys[Keys[\"Digit3\"] = 51] = \"Digit3\";\n    Keys[Keys[\"Digit4\"] = 52] = \"Digit4\";\n    Keys[Keys[\"Digit5\"] = 53] = \"Digit5\";\n    Keys[Keys[\"Digit6\"] = 54] = \"Digit6\";\n    Keys[Keys[\"Digit7\"] = 55] = \"Digit7\";\n    Keys[Keys[\"Digit8\"] = 56] = \"Digit8\";\n    Keys[Keys[\"Digit9\"] = 57] = \"Digit9\";\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    Keys[Keys[\"Insert\"] = 45] = \"Insert\";\n    Keys[Keys[\"KeyA\"] = 65] = \"KeyA\";\n    Keys[Keys[\"KeyB\"] = 66] = \"KeyB\";\n    Keys[Keys[\"KeyC\"] = 67] = \"KeyC\";\n    Keys[Keys[\"KeyD\"] = 68] = \"KeyD\";\n    Keys[Keys[\"KeyE\"] = 69] = \"KeyE\";\n    Keys[Keys[\"KeyF\"] = 70] = \"KeyF\";\n    Keys[Keys[\"KeyG\"] = 71] = \"KeyG\";\n    Keys[Keys[\"KeyH\"] = 72] = \"KeyH\";\n    Keys[Keys[\"KeyI\"] = 73] = \"KeyI\";\n    Keys[Keys[\"KeyJ\"] = 74] = \"KeyJ\";\n    Keys[Keys[\"KeyK\"] = 75] = \"KeyK\";\n    Keys[Keys[\"KeyL\"] = 76] = \"KeyL\";\n    Keys[Keys[\"KeyM\"] = 77] = \"KeyM\";\n    Keys[Keys[\"KeyN\"] = 78] = \"KeyN\";\n    Keys[Keys[\"KeyO\"] = 79] = \"KeyO\";\n    Keys[Keys[\"KeyP\"] = 80] = \"KeyP\";\n    Keys[Keys[\"KeyQ\"] = 81] = \"KeyQ\";\n    Keys[Keys[\"KeyR\"] = 82] = \"KeyR\";\n    Keys[Keys[\"KeyS\"] = 83] = \"KeyS\";\n    Keys[Keys[\"KeyT\"] = 84] = \"KeyT\";\n    Keys[Keys[\"KeyU\"] = 85] = \"KeyU\";\n    Keys[Keys[\"KeyV\"] = 86] = \"KeyV\";\n    Keys[Keys[\"KeyW\"] = 87] = \"KeyW\";\n    Keys[Keys[\"KeyX\"] = 88] = \"KeyX\";\n    Keys[Keys[\"KeyY\"] = 89] = \"KeyY\";\n    Keys[Keys[\"KeyZ\"] = 90] = \"KeyZ\";\n    Keys[Keys[\"NumpadDecimal\"] = 110] = \"NumpadDecimal\";\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    Keys[Keys[\"Shift\"] = 16] = \"Shift\";\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n})(Keys || (Keys = {}));\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ResizeService, DraggableDirective, DraggableModule, EventsOutsideAngularDirective, EventsModule, ResizeSensorComponent, ResizeBatchService, ResizeCompatService, ResizeObserverService, ResizeSensorModule, KendoInput, isDocumentAvailable, isChanged, anyChanged, hasObservers, guid, Keys };\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAoEM,AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAWA;;;;;;;;;KASD;;;;;;;;;;;gDAOC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqCA,AAKA;;;;;;;;;;;;;;;;;;;;;;;oBAUA;;;;;;;;;KASD;;;;;;;;;;gDAMC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwPA,AAGA;;;;;;;;;uEAIG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA+CH,AAMA;;;;;;;;;;;;;;;;;;;;;;;oBAUA;;;;;;;;;;KAUD;;;;;;;;;;;gDAOC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}