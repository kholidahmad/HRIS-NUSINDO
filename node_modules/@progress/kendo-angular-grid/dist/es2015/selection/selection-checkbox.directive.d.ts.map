{"version":3,"file":"selection-checkbox.directive.d.ts","sources":["D:/project/projek_angular/hris_rni/node_modules/@progress/kendo-angular-grid/dist/es2015/selection/selection-checkbox.directive.d.ts"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { AfterContentChecked, ElementRef, Renderer2, OnDestroy, NgZone } from '@angular/core';\nimport { SelectionService } from './selection.service';\n/**\n * Represents the row-selection checkbox of the Grid. The directive expects the\n * index of the current row as an input parameter. Inside the\n * [`CheckboxColumnComponent`]({% slug api_grid_checkboxcolumncomponent %}), apply the\n * directive to an `input` element. When the user clicks the checkbox that is associated\n * with the directive, a [`selectionChange`]({% slug api_grid_gridcomponent %}#toc-selectionChange)\n * event is triggered.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *     <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *       <input [kendoGridSelectionCheckbox]=\"idx\" />\n *     </ng-template>\n *   </kendo-grid-checkbox-column>\n * </kendo-grid>\n * ```\n */\nexport declare class SelectionCheckboxDirective implements AfterContentChecked, OnDestroy {\n    private selectionService;\n    private el;\n    private renderer;\n    private ngZone;\n    /**\n     * The current index of the `dataItem` that will be selected.\n     */\n    itemIndex: number;\n    type: string;\n    private destroyClick;\n    private destroyKeyDown;\n    ngAfterContentChecked(): void;\n    constructor(selectionService: SelectionService, el: ElementRef, renderer: Renderer2, ngZone: NgZone);\n    ngOnDestroy(): void;\n    private onClick;\n    private onKeyDown;\n    private setCheckedState;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;;;;;;;;;;;;;;;AAkBA;"}