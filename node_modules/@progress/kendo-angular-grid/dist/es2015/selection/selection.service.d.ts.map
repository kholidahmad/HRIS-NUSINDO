{"version":3,"file":"selection.service.d.ts","sources":["D:/project/projek_angular/hris_rni/node_modules/@progress/kendo-angular-grid/dist/es2015/selection/selection.service.d.ts"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, OnDestroy } from '@angular/core';\nimport { SelectableSettings } from './selectable-settings';\nimport { RowArgs, RowSelectedFn } from \"../rendering/common/row-class\";\nimport { DomEventsService } from '../common/dom-events.service';\nimport { LocalDataChangesService } from '../editing/local-data-changes.service';\n/**\n * The returned type of the `selection` event\n * ([see example]({% slug selection_grid %}#toc-in-combination-with-the-select-all-feature)).\n */\nexport interface SelectionEvent {\n    /**\n     * The items that were added to the selection.\n     */\n    selectedRows: RowArgs[];\n    /**\n     * The items that were removed from the selection.\n     */\n    deselectedRows: RowArgs[];\n    /**\n     * Shows the state of the `Ctrl` key (or the `Command` key on a Mac) during the selection.\n     */\n    ctrlKey: boolean;\n    /**\n     * Shows the state of the `Shift` key during the selection.\n     */\n    shiftKey?: boolean;\n}\n/**\n * @hidden\n */\nexport declare type SelectionServiceSettings = {\n    rowSelected: RowSelectedFn;\n    selectable: boolean | SelectableSettings;\n    view: {\n        accessor: Function;\n        at: Function;\n        length: Number;\n    };\n};\n/**\n * @hidden\n */\nexport declare class SelectionService implements OnDestroy {\n    changes: EventEmitter<SelectionEvent>;\n    lastSelectionStartIndex: number;\n    currentSelection: RowArgs[];\n    selectAllChecked: boolean;\n    settings: SelectionServiceSettings;\n    private cellClickSubscription;\n    private mousedownSubscription;\n    private dataChangedSubscription;\n    private _selectAllState;\n    constructor(domEvents: DomEventsService, localDataChangesService?: LocalDataChangesService);\n    init(settings: any): void;\n    isSelected(index: number): boolean;\n    handleClick(item: any, event: any): void;\n    toggle(item: any): any;\n    toggleByIndex(index: number): any;\n    select(item: any): any;\n    deselect(removedItem: any): void;\n    addAllTo(item: any, ctrlKey: boolean): any;\n    updateAll(selectAllChecked: boolean): void;\n    readonly selectAllState: any;\n    readonly selected: number[];\n    readonly options: SelectableSettings;\n    ngOnDestroy(): void;\n    private getIterator;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;"}